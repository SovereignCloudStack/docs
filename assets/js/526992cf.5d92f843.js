"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[81475],{56815:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"scs-0103-v1-standard-flavors","title":"SCS Standard Flavors and Properties","description":"The SCS-0103 standard outlines mandatory and recommended specifications for flavors and properties in OpenStack\\nenvironments to ensure uniformity across SCS clouds. Mandatory and recommended flavors are defined with specific\\nconfigurations of vCPUs, vCPU types, RAM, and root disk sizes, alongside extra specs like scs:name-vN, scs:cpu-type,\\nand scs:diskN-type to detail the flavor\'s specifications. This standard facilitates guaranteed availability and\\nconsistency of flavors, simplifying the deployment process for DevOps teams.\\n","source":"@site/standards/scs-0103-v1-standard-flavors.md","sourceDirName":".","slug":"/scs-0103-v1-standard-flavors","permalink":"/standards/scs-0103-v1-standard-flavors","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SCS Standard Flavors and Properties","type":"Standard","status":"Stable","stabilized_at":"2024-02-08T00:00:00.000Z","track":"IaaS","description":"The SCS-0103 standard outlines mandatory and recommended specifications for flavors and properties in OpenStack\\nenvironments to ensure uniformity across SCS clouds. Mandatory and recommended flavors are defined with specific\\nconfigurations of vCPUs, vCPU types, RAM, and root disk sizes, alongside extra specs like scs:name-vN, scs:cpu-type,\\nand scs:diskN-type to detail the flavor\'s specifications. This standard facilitates guaranteed availability and\\nconsistency of flavors, simplifying the deployment process for DevOps teams.\\n"},"sidebar":"standards","previous":{"title":"scs-0103: SCS Standard Flavors and Properties","permalink":"/standards/iaas/scs-0103"},"next":{"title":"scs-0104: SCS Standard Images","permalink":"/standards/iaas/scs-0104"}}');var r=n(74848),t=n(28453);const i={title:"SCS Standard Flavors and Properties",type:"Standard",status:"Stable",stabilized_at:new Date("2024-02-08T00:00:00.000Z"),track:"IaaS",description:"The SCS-0103 standard outlines mandatory and recommended specifications for flavors and properties in OpenStack\nenvironments to ensure uniformity across SCS clouds. Mandatory and recommended flavors are defined with specific\nconfigurations of vCPUs, vCPU types, RAM, and root disk sizes, alongside extra specs like scs:name-vN, scs:cpu-type,\nand scs:diskN-type to detail the flavor's specifications. This standard facilitates guaranteed availability and\nconsistency of flavors, simplifying the deployment process for DevOps teams.\n"},a=void 0,o={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Properties (extra_specs)",id:"properties-extra_specs",level:2},{value:"Standard SCS flavors",id:"standard-scs-flavors",level:2},{value:"Mandatory",id:"mandatory",level:3},{value:"Recommended",id:"recommended",level:3},{value:"Guarantees and properties",id:"guarantees-and-properties",level:3},{value:"Remarks",id:"remarks",level:3},{value:"Conformance Tests",id:"conformance-tests",level:2},{value:"Operational tooling",id:"operational-tooling",level:2},{value:"Previous standard versions",id:"previous-standard-versions",level:2}];function l(e){const s={a:"a",code:"code",div:"div",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(s.p,{children:["This is v1.1 of the standard, which lifts the following restriction regarding the property ",(0,r.jsx)(s.code,{children:"scs:name-vN"}),':\nthis property may now be used on any flavor, rather than standard flavors only. In addition, the "vN" is\nnow interpreted as "name variant N" instead of "version N of the naming standard". Note that this change\nindeed preserves compliance, i.e., compliance with v1.0 implies compliance with v1.1.']}),"\n",(0,r.jsx)(s.h2,{id:"terminology",children:"Terminology"}),"\n",(0,r.jsxs)(s.p,{children:["extra_specs\nAdditional properties on an OpenStack flavor, see\n",(0,r.jsx)(s.a,{href:"https://docs.openstack.org/nova/2024.1/user/flavors.html#extra-specs",children:"OpenStack Nova user documentation"}),"\nand\n",(0,r.jsx)(s.a,{href:"https://docs.openstack.org/nova/2024.1/configuration/extra-specs.html",children:"OpenStack Nova configuration documentation"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"motivation",children:"Motivation"}),"\n",(0,r.jsx)(s.p,{children:"In OpenStack environments there is a need to define different flavors for instances.\nThe flavors are pre-defined by the operator, the customer can not change these.\nOpenStack providers thus typically offer a large selection of flavors."}),"\n",(0,r.jsxs)(s.p,{children:["While flavors can be discovered (",(0,r.jsx)(s.code,{children:"openstack flavor list"}),"), it is helpful for users (DevOps teams),\nto have a guaranteed set of flavors available on all SCS clouds, so these need not be discovered."]}),"\n",(0,r.jsx)(s.h2,{id:"properties-extra_specs",children:"Properties (extra_specs)"}),"\n",(0,r.jsx)(s.p,{children:"The following extra_specs are recognized, together with the respective semantics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:name-vN=NAME"})," (where ",(0,r.jsx)(s.code,{children:"N"})," is a positive integer, and ",(0,r.jsx)(s.code,{children:"NAME"})," is some string) means that\n",(0,r.jsx)(s.code,{children:"NAME"})," is a valid name for this flavor according to any major version of the ",(0,r.jsx)(s.a,{href:"https://docs.scs.community/standards/iaas/scs-0100",children:"SCS standard on\nflavor naming"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:cpu-type=shared-core"})," means that ",(0,r.jsx)(s.em,{children:"at least 20% of a core in >99% of the time"}),",\nmeasured over the course of one month (1% is 7,2 h/month). The ",(0,r.jsx)(s.code,{children:"cpu-type=shared-core"}),"\ncorresponds to the ",(0,r.jsx)(s.code,{children:"V"})," cpu modifier in the ",(0,r.jsx)(s.a,{href:"/standards/scs-0100-v3-flavor-naming",children:"flavor-naming spec"}),",\nother options are ",(0,r.jsx)(s.code,{children:"crowded-core"})," (",(0,r.jsx)(s.code,{children:"L"}),"), ",(0,r.jsx)(s.code,{children:"dedicated-thread"})," (",(0,r.jsx)(s.code,{children:"T"}),") and ",(0,r.jsx)(s.code,{children:"dedicated-core"})," (",(0,r.jsx)(s.code,{children:"C"}),")."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:diskN-type=ssd"})," (where ",(0,r.jsx)(s.code,{children:"N"})," is a non-negative integer, usually ",(0,r.jsx)(s.code,{children:"0"}),") means that the\nroot disk ",(0,r.jsx)(s.code,{children:"N"})," must support 1000 ",(0,r.jsx)(s.em,{children:"sequential"})," IOPS per VM, and it must be equipped with\npower-loss protection; see ",(0,r.jsx)(s.a,{href:"/standards/scs-0110-v1-ssd-flavors",children:"scs-0110-v1-ssd-flavors"}),".\nThe ",(0,r.jsx)(s.code,{children:"disk"}),"N",(0,r.jsx)(s.code,{children:"-type=ssd"})," setting corresponds to the ",(0,r.jsx)(s.code,{children:"s"})," disk modifier, other options\nare ",(0,r.jsx)(s.code,{children:"nvme"})," (",(0,r.jsx)(s.code,{children:"p"}),"), ",(0,r.jsx)(s.code,{children:"hdd"})," (",(0,r.jsx)(s.code,{children:"h"}),") and ",(0,r.jsx)(s.code,{children:"network"})," (",(0,r.jsx)(s.code,{children:"n"}),"). Only flavors without disk and\nthose with ",(0,r.jsx)(s.code,{children:"diskN-type=network"})," can be expected to support live-migration."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Whenever ANY of these are present on ANY flavor, the corresponding semantics must be satisfied."}),"\n",(0,r.jsxs)(s.p,{children:["The extra_spec ",(0,r.jsx)(s.code,{children:"scs:name-vN"}),' is to be interpreted as "name variant N". This name scheme is designed to be\nbackwards compatible with v1.0 of this standard, where ',(0,r.jsx)(s.code,{children:"scs:name-vN"}),' is interpreted as\n"name according to naming standard vN". We abandon this former interpretation for two reasons:']}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"the naming standards admit multiple (even many) names for the same flavor, and we want to provide a means\nof advertising more than one of them (said standards recommend using two: a short one and a long one),"}),"\n",(0,r.jsxs)(s.li,{children:["the same flavor name may be valid according to multiple versions at the same time, which would lead to\na pollution of the extra_specs with redundant properties; for instance, the name\n",(0,r.jsx)(s.code,{children:"SCS-4V-16"})," is valid for both ",(0,r.jsx)(s.a,{href:"/standards/scs-0100-v2-flavor-naming",children:"scs-0100-v2"})," and\n",(0,r.jsx)(s.a,{href:"/standards/scs-0100-v3-flavor-naming",children:"scs-0100-v3"}),", and, since it does not use any extension, it will be valid\nfor any future version that only changes the extensions, such as the GPU vendor and architecture."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:'Note that it is not required to use consecutive numbers to number the name variants.\nThis way, it becomes easier to remove a single variant (no "closing the gap" required).'}),"\n",(0,r.jsxs)(s.p,{children:["If extra_specs of the form ",(0,r.jsx)(s.code,{children:"scs:name-vN"})," are used to specify SCS flavor names, it is RECOMMENDED to include\nnames for the latest stable major version of the standard on flavor naming."]}),"\n",(0,r.jsx)(s.h2,{id:"standard-scs-flavors",children:"Standard SCS flavors"}),"\n",(0,r.jsx)(s.p,{children:"Following are flavors that must exist on standard SCS clouds (x86-64).\nNote that this statement does not preclude the existence of additional flavors."}),"\n",(0,r.jsx)(s.h3,{id:"mandatory",children:"Mandatory"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Recommended name"}),(0,r.jsx)(s.th,{children:"vCPUs"}),(0,r.jsx)(s.th,{children:"vCPU type"}),(0,r.jsx)(s.th,{children:"RAM [GiB]"}),(0,r.jsx)(s.th,{children:"Root disk [GB]"}),(0,r.jsx)(s.th,{children:"Disk type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1V-4"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-8"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-16"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-16-100s"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{children:"100"}),(0,r.jsx)(s.td,{children:"ssd"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-8V-32"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"32"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1V-2"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-4"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-4-20s"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"20"}),(0,r.jsx)(s.td,{children:"ssd"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-8"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-8V-16"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-16V-32"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"32"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1V-8"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-16"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-32"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"32"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1L-1"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"crowded-core"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"recommended",children:"Recommended"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Recommended name"}),(0,r.jsx)(s.th,{children:"vCPUs"}),(0,r.jsx)(s.th,{children:"vCPU type"}),(0,r.jsx)(s.th,{children:"RAM [GiB]"}),(0,r.jsx)(s.th,{children:"Root disk [GB]"}),(0,r.jsx)(s.th,{children:"Disk type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1V-4-10"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"10"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-8-20"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"20"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-16-50"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{children:"50"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-8V-32-100"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"32"}),(0,r.jsx)(s.td,{children:"100"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1V-2-5"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"5"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-4-10"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"10"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-8-20"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"20"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-8V-16-50"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{children:"50"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-16V-32-100"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"32"}),(0,r.jsx)(s.td,{children:"100"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1V-8-20"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"8"}),(0,r.jsx)(s.td,{children:"20"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-2V-16-50"}),(0,r.jsx)(s.td,{children:"2"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"16"}),(0,r.jsx)(s.td,{children:"50"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-4V-32-100"}),(0,r.jsx)(s.td,{children:"4"}),(0,r.jsx)(s.td,{children:"shared-core"}),(0,r.jsx)(s.td,{children:"32"}),(0,r.jsx)(s.td,{children:"100"}),(0,r.jsx)(s.td,{children:"(any)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"SCS-1L-1-5"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"crowded-core"}),(0,r.jsx)(s.td,{children:"1"}),(0,r.jsx)(s.td,{children:"5"}),(0,r.jsx)(s.td,{children:"(any)"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"guarantees-and-properties",children:"Guarantees and properties"}),"\n",(0,r.jsx)(s.p,{children:"The figures given in the table (number of CPUs, amount of RAM, root disk size) must match\nprecisely the corresponding figures in the flavor."}),"\n",(0,r.jsxs)(s.p,{children:["In addition, the following properties must be set (in the ",(0,r.jsx)(s.code,{children:"extra_specs"}),"):"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:name-v1"})," to the recommended name, but with each dash AFTER the first one replaced by a colon,"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:name-v2"})," to the recommended name,"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:cpu-type"})," to ",(0,r.jsx)(s.code,{children:"shared-core"})," or ",(0,r.jsx)(s.code,{children:"crowded-core"}),", reflecting the vCPU type,"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"scs:disk0-type"})," not set if no disk is provided, otherwise set to ",(0,r.jsx)(s.code,{children:"ssd"})," or some other\nvalue, reflecting the disk type."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsxs)(s.p,{children:["We expect the most used vCPU",(0,r.jsx)(s.div,{children:"GiB"})," ratio to be 1:4."]}),"\n",(0,r.jsxs)(s.p,{children:["Note that all vCPUs of SCS standard flavors are oversubscribed \u2014 the smallest ",(0,r.jsx)(s.code,{children:"1L-1"}),"\nflavor allows for heavy oversubscription (note the ",(0,r.jsx)(s.code,{children:"L"}),"), and thus can be offered very\ncheaply \u2014 imagine jump hosts ..."]}),"\n",(0,r.jsx)(s.p,{children:"The design allows for small clouds (with CPUs with 16 Threads, 64GiB RAM\ncompute hosts) to offer all flavors."}),"\n",(0,r.jsx)(s.p,{children:"Except for the two flavors with SSD root volume, disks types are not specified\n(and expected to be network disks (Ceph/Cinder) or local SATA/SAS disks typically)."}),"\n",(0,r.jsxs)(s.p,{children:["We only included a limited variation of disk sizes \u2014 this reflects that\nfor the standard networked cinder\ndisks, you can pass ",(0,r.jsx)(s.code,{children:"block_device_mapping_v2"})," on server (VM) creation to\nallocate a boot disk of any size you desire. We have scaled the few\nrecommended disk sizes with the amount of RAM. For each flavor there is\nalso one ",(0,r.jsx)(s.em,{children:"without"})," a pre-attached disk \u2014 these are meant to be used\nto boot from a volume (either created beforehand or allocated on-the-fly\nwith ",(0,r.jsx)(s.code,{children:"block_device_mapping_v2"}),", e.g.\n",(0,r.jsx)(s.code,{children:"openstack server create --flavor SCS-1V-2 --block-device-mapping sda=IMGUUID:image:12:true"}),"\nto create a bootable 12G cinder volume from image ",(0,r.jsx)(s.code,{children:"IMGUUID"})," that gets tied to the VM\ninstance life cycle.)"]}),"\n",(0,r.jsx)(s.h2,{id:"conformance-tests",children:"Conformance Tests"}),"\n",(0,r.jsxs)(s.p,{children:["The script ",(0,r.jsx)(s.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/Tests/iaas/standard-flavors/flavors-openstack.py",children:(0,r.jsx)(s.code,{children:"flavors-openstack.py"})}),"\nwill read the lists of mandatory and recommended flavors\nfrom a yaml file provided as command-line argument, connect to an OpenStack installation,\nand check whether the flavors are present and their extra_specs are correct."]}),"\n",(0,r.jsx)(s.p,{children:"Missing flavors will be reported on various logging channels: error for mandatory, warning for\nrecommended flavors. Incorrect extra_specs will be reported as error in any case.\nThe return code will be non-zero if the test could not be performed or if any error was\nreported."}),"\n",(0,r.jsxs)(s.p,{children:["The script does not check whether a name given via the extra_spec ",(0,r.jsx)(s.code,{children:"scs:name-vN"})," is indeed valid according\nto any major version of the SCS standard on flavor naming."]}),"\n",(0,r.jsx)(s.h2,{id:"operational-tooling",children:"Operational tooling"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/osism/openstack-flavor-manager",children:"openstack-flavor-manager"})," is able to\ncreate all standard, mandatory SCS flavors for you. It takes input that can be generated by\n",(0,r.jsx)(s.code,{children:"flavor-manager-input.py"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"previous-standard-versions",children:"Previous standard versions"}),"\n",(0,r.jsxs)(s.p,{children:["The list of standard flavors used to be part of the flavor naming standard up until\n",(0,r.jsx)(s.a,{href:"/standards/scs-0100-v3-flavor-naming",children:"version 3"}),". The following changes have been made to\nthe list in comparison with said standard:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"the flavor names have been turned into recommendations, and"}),"\n",(0,r.jsx)(s.li,{children:"the properties have been introduced in order to help discoverability."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Note that the flavors with fixed size root disks have all moved to Recommended\nwith ",(0,r.jsx)(s.a,{href:"/standards/scs-0100-v3-flavor-naming",children:"scs-0100-v3"}),".\nThis means that they are not a certification requirement any longer,\nbut we still recommend implementing these for backwards compatibility reasons.\nAlso in that standard, two flavors with SSD+ root disks have been added, as defined in\n",(0,r.jsx)(s.a,{href:"/standards/scs-0110-v1-ssd-flavors",children:"scs-0110-v1-ssd-flavors.md"})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>a});var d=n(96540);const r={},t=d.createContext(r);function i(e){const s=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),d.createElement(t.Provider,{value:s},e.children)}}}]);