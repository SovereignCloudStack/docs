"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[61427],{52319:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"operating-scs/components/central-api/poc-setup","title":"Central API MVP","description":"Right now, this repository implements issue 374.","source":"@site/docs/04-operating-scs/components/central-api/poc-setup.md","sourceDirName":"04-operating-scs/components/central-api","slug":"/operating-scs/components/central-api/poc-setup","permalink":"/docs/operating-scs/components/central-api/poc-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/04-operating-scs/components/central-api/poc-setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Overview","permalink":"/docs/operating-scs/components/central-api/overview"},"next":{"title":"Automated Pentesting","permalink":"/docs/category/automated-pentesting"}}');var s=t(74848),i=t(28453);const c={},r="Central API MVP",o={},l=[{value:"Quick Start",id:"quick-start",level:2}];function p(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"central-api-mvp",children:"Central API MVP"})}),"\n",(0,s.jsxs)(e.p,{children:["Right now, this repository implements ",(0,s.jsx)(e.a,{href:"https://github.com/SovereignCloudStack/issues/issues/374",children:"issue 374"}),".\nIt contains a script (",(0,s.jsx)(e.code,{children:"gen.py"}),") to mirror all crossplane openstack provider cluster-scoped resources to namespaced resources in an SCS API group."]}),"\n",(0,s.jsxs)(e.p,{children:["Also, these instructions are striving to implement ",(0,s.jsx)(e.a,{href:"https://docs.crossplane.io/knowledge-base/guides/multi-tenant/#namespaces-as-an-isolation-mechanism",children:"namespaces as isolation mechanism"})," to implement a multi-tenant system backed by a single Kubernetes cluster."]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://github.com/crossplane-contrib/x-generation",children:"crossplane-contrib/x-generation"})," might be used as soon as ",(0,s.jsx)(e.a,{href:"https://github.com/crossplane-contrib/x-generation/issues/21",children:"the required feature for namespace mapping"})," is implemented."]}),"\n",(0,s.jsx)(e.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Setup testing Kubernetes cluster"}),"\n",(0,s.jsx)(e.li,{children:"Install crossplane"}),"\n",(0,s.jsxs)(e.li,{children:["Select fitting configuration package (containing provider definitions, XRD's and composites) and install it","\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"export VERSION=...\nexport XPKG=... # openstack / kubernetes\ncrossplane xpkg install configuration registry.scs.community/central-api/$XPKG:$VERSION\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Setup provider config (wearing CSP hat)","\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Namespace\nmetadata:\n  name: tenant-name\n---\napiVersion: openstack.upbound.io/v1beta1\nkind: ProviderConfig\nmetadata:\n  name: tenant-name\nspec:\n  credentials:\n    secretRef:\n      namespace: crossplane-system\n      name: tenant-name-clouds-yaml\n      key: clouds.json\n    source: Secret\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: tenant-name-clouds-yaml\n  namespace: crossplane-system\nstringData:\n  clouds.json: |\n    {\n      "auth_url": "https://api.gx-scs.sovereignit.cloud:5000",\n      "application_credential_id": "...",\n      "application_credential_secret": "...",\n      "tenant_name": "tenant-name"\n    }\n'})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Setup RBAC for tenants (wearing CSP hat)","\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: tenant\nrules:\n- apiGroups:\n  - api.scs.community\n  resources:\n  - '*'\n  verbs:\n  - '*'\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tenant\n  namespace: tenant-name\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: scs-bind\n  namespace: tenant-name\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: tenant\nsubjects:\n- kind: ServiceAccount\n  name: tenant\n  namespace: tenant-name\n"})}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Create resource (wearing tenant hat, ",(0,s.jsx)(e.code,{children:"kubectl --as system:serviceaccount:tenant-name:tenant -n tenant-name"}),")","\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-yaml",children:"apiVersion: api.scs.community/v1alpha1\nkind: KeypairV2\nmetadata:\n  name: admin\n  namespace: tenant-name\nspec:\n  name: admin-keypair\n  publicKey: |-\n    ssh-rsa ...\n---\napiVersion: api.scs.community/v1alpha1\nkind: InstanceV2\nmetadata:\n  name: testing-vm\n  namespace: tenant-name\nspec:\n  name: testing-vm\n  keyPair: admin-keyPair\n  imageName: 'Debian 12'\n  flavorName: 'SCS-1V:1:20'\n"})}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"Observe creation of resources"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["Right now, it would be expected to hand out the ",(0,s.jsx)(e.code,{children:"ServiceAccount"})," token to the actual tenant; When AuthN is done via OIDC (or other means), the ",(0,s.jsx)(e.code,{children:"ServiceAccount"})," ",(0,s.jsx)(e.code,{children:"tenant-name/tenant"})," may be dropped and ",(0,s.jsx)(e.code,{children:"RoleBinding"})," ",(0,s.jsx)(e.code,{children:"tenant-name/scs-bind"})," may point to an actual user/group."]})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>r});var a=t(96540);const s={},i=a.createContext(s);function c(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);