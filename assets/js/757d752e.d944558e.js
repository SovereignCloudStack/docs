"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6337],{29377:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"operating-scs/components/scs-health-monitor/Workflow","title":"Kubernetes BDD Testing Framework Documentation","description":"Overview","source":"@site/docs/04-operating-scs/components/scs-health-monitor/Workflow.md","sourceDirName":"04-operating-scs/components/scs-health-monitor","slug":"/operating-scs/components/scs-health-monitor/Workflow","permalink":"/docs/operating-scs/components/scs-health-monitor/Workflow","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/04-operating-scs/components/scs-health-monitor/Workflow.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"SCS Health Monitor","permalink":"/docs/operating-scs/components/scs-health-monitor/overview"},"next":{"title":"Testflow-Infrastructure","permalink":"/docs/operating-scs/components/scs-health-monitor/Testflow"}}');var t=i(74848),r=i(28453);const o={},a="Kubernetes BDD Testing Framework Documentation",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Kubernetes Configuration",id:"kubernetes-configuration",level:3},{value:"Helm Configuration",id:"helm-configuration",level:3},{value:"Running Tests",id:"running-tests",level:3},{value:"Running the Tests",id:"running-the-tests",level:3},{value:"Example Command to Run a Specific Feature File",id:"example-command-to-run-a-specific-feature-file",level:3},{value:"Adding New Features",id:"adding-new-features",level:3},{value:"Creating New Feature Files",id:"creating-new-feature-files",level:3},{value:"Modifying Existing Features",id:"modifying-existing-features",level:4},{value:"Setting Up Ingress",id:"setting-up-ingress",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Errors",id:"common-errors",level:3},{value:"Debugging Tips",id:"debugging-tips",level:4},{value:"Observability stack",id:"observability-stack",level:2},{value:"Adding fixes/new functionalities to the project flow:",id:"adding-fixesnew-functionalities-to-the-project-flow",level:2},{value:"Conclusion",id:"conclusion",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"kubernetes-bdd-testing-framework-documentation",children:"Kubernetes BDD Testing Framework Documentation"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"This framework is designed to facilitate Behavior-Driven Development (BDD) for both cloud level testing\nand container level testing. The framework allows you to write human-readable tests that validate Kubernetes clusters,\npods, services, and other resources."}),"\n",(0,t.jsx)(n.p,{children:"Before you begin, ensure you have the following installed on your machine:"}),"\n",(0,t.jsx)(n.p,{children:"Python 3.8+\npip (Python package installer)\nkubectl (Kubernetes command-line tool)\nHelm (Kubernetes package manager)"}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Clone the Repository:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/SovereignCloudStack/scs-health-monitor\ncd scs-health-monitor\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Set Up a Virtual Environment:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"It's recommended to use a virtual environment to avoid conflicts with other Python packages."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# create python virtual environment\npython3 -m venv <environment_name>\n\n# activate the python virtual environment in windows command prompt\n<environment_name>/Scripts/activate   \n\n# activate the python virtual environment in Unix or MacOS\nsource <environment_name>/bin/activate\n\n# install all the python dependencies\npython -m pip install -r requirements.txt \n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Install Required Python Packages:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Install all necessary Python packages using pip."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install -r requirements.txt\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Install Additional Tools (Optional) or run script install_env.py:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If you need to install and manage an NGINX Ingress controller, you'll need helm."}),"\n",(0,t.jsx)(n.p,{children:"For MacOS:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"brew install helm\n"})}),"\n",(0,t.jsx)(n.p,{children:"For Linux:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install helm\n"})}),"\n",(0,t.jsx)(n.p,{children:"For Windows:"}),"\n",(0,t.jsx)(n.p,{children:"The easeiest way is to use linux kernel for windows and proceed there."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["In this repository (under main directory) you have to create two files that will be referenced by ",(0,t.jsx)(n.code,{children:"env.yaml"})," and ",(0,t.jsx)(n.code,{children:"clouds.yaml"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"env.yaml:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'   OS_AUTH_TYPE: ""\n   OS_AUTH_URL: ""\n   OS_IDENTITY_API_VERSION: ""\n   OS_REGION_NAME: ""\n   OS_INTERFACE: ""\n   OS_APPLICATION_CREDENTIAL_ID: ""\n   OS_APPLICATION_CREDENTIAL_SECRET: ""\n   OS_PROJECT_NAME: ""\n   OS_USER_DOMAIN_NAME: ""\n   OS_PROJECT_DOMAIN_NAME: "" \n\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"clouds.yaml:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"clouds:\n  gx:\n    region_name:\n    auth_type:\n    auth_url:\n    identity_api_version:\n    interface:\n    application_credential_id:\n    application_credential_secret:\n"})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"kubernetes-configuration",children:"Kubernetes Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Ensure that your Kubernetes configuration file (kubeconfig) is correctly set up. This file is typically located at\n~/.kube/config. The framework uses this configuration to interact with your Kubernetes cluster."}),"\n",(0,t.jsx)(n.p,{children:"If you want to use a specific context from your kubeconfig, you can set it using:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl config use-context scs-vp12\n"})}),"\n",(0,t.jsx)(n.h3,{id:"helm-configuration",children:"Helm Configuration"}),"\n",(0,t.jsx)(n.p,{children:"For Ingress management, you need to add the NGINX Ingress repository and install the Ingress controller."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm install nginx-ingress ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace\n"})}),"\n",(0,t.jsx)(n.h3,{id:"running-tests",children:"Running Tests"}),"\n",(0,t.jsx)(n.p,{children:"Writing Test Scenarios"}),"\n",(0,t.jsx)(n.p,{children:"Tests are written in .feature files using Gherkin syntax. Each scenario represents a feature of the application you want to test."}),"\n",(0,t.jsx)(n.p,{children:"Example feature file (container_creation.feature):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gherkin",children:"\nFeature: Container Management\n\n  Scenario: Creating a simple container\n    Given a Kubernetes cluster\n    When I create a container named test-container\n    Then the container test-container should be running\n\n  Scenario: Creating a service for the container\n    Given a container running a web server named web-container\n    When I create a service for the container named web-container on 80\n    Then the service for web-container should be running\n    When I send an HTTP request to web-container\n    Then the response status code should be 200\n"})}),"\n",(0,t.jsx)(n.h3,{id:"running-the-tests",children:"Running the Tests"}),"\n",(0,t.jsx)(n.p,{children:"You can run the tests using the behave command from the root of your project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scs-health-monitor behave\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will execute all the scenarios defined in the .feature files within the features directory."}),"\n",(0,t.jsx)(n.h3,{id:"example-command-to-run-a-specific-feature-file",children:"Example Command to Run a Specific Feature File"}),"\n",(0,t.jsx)(n.p,{children:"To run a specific feature file, use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scs-health-monitor behave container_level_testing/features/container_creation_deletion.feature\n"})}),"\n",(0,t.jsx)(n.h3,{id:"adding-new-features",children:"Adding New Features"}),"\n",(0,t.jsx)(n.p,{children:"Creating New Step Definitions"}),"\n",(0,t.jsx)(n.p,{children:"To add new behavior or extend existing features, define new steps in the Python files located in container_level_testing/features/steps/. These files map Gherkin steps to Python code."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"@given('describe what test is doing')\ndef name_of_the_test(context):\n    ## Body of the test  \n"})}),"\n",(0,t.jsx)(n.h3,{id:"creating-new-feature-files",children:"Creating New Feature Files"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create a New Feature File:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Add a new .feature file in the features directory."}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Write Scenarios in Gherkin Syntax:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Define the behavior you want to test using Given-When-Then steps."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gherkin",children:"Feature: New Kubernetes Feature\n\n  Scenario: A new feature scenario\n    Given name of the function \n    When name of another function with logic\n    Then step with assertion to verify if step before was succeded \n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Implement the Step Definitions:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Add the corresponding step definitions in the appropriate .py file under features/steps/."}),"\n",(0,t.jsx)(n.h4,{id:"modifying-existing-features",children:"Modifying Existing Features"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Update the Feature File:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Modify the .feature file to reflect the new behavior or changes."}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Update the Step Definitions:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Modify the corresponding step definitions in the .py file."}),"\n",(0,t.jsx)(n.h4,{id:"setting-up-ingress",children:"Setting Up Ingress"}),"\n",(0,t.jsx)(n.p,{children:"To add ingress resources:"}),"\n",(0,t.jsx)(n.p,{children:"Create Ingress YAML:"}),"\n",(0,t.jsx)(n.p,{children:"Create an ingress resource file my-ingress.yaml with the desired settings."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-ingress\nspec:\n  rules:\n  - host: my-project.local\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: my-service\n            port:\n              number: 80\n\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Apply the Ingress Resource:"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Use the following command to apply the ingress resource:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f my-ingress.yaml\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-errors",children:"Common Errors"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Connection Errors: Ensure that Kubernetes and Ingress services are correctly configured and running."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Port Conflicts: Ensure that the specified ports are not already in use. Modify the nodePort or use dynamic assignment."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Timeouts: Adjust the timeout settings in the test code if the service or container takes longer to initialize."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check Pod Logs:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl logs <pod-name>\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check Service and Pod Status:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"kubectl get services\nkubectl get pods\n"})}),"\n",(0,t.jsx)(n.h2,{id:"observability-stack",children:"Observability stack"}),"\n",(0,t.jsxs)(n.p,{children:["For more informations about setting up Observability Stack, please use this\n",(0,t.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/scs-health-monitor/blob/main/docs/ObservabilityStack/SetupObservabilityStack.md",children:"file"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"adding-fixesnew-functionalities-to-the-project-flow",children:"Adding fixes/new functionalities to the project flow:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create branch for issue ",(0,t.jsx)(n.code,{children:"git checkout -b SPACECAT-<issue_number>-<issue_name>"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Add the changes made ",(0,t.jsx)(n.code,{children:"git add -u"})," or ",(0,t.jsx)(n.code,{children:"git add <file_name>"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Commit the changes using ",(0,t.jsx)(n.code,{children:'git commit -s -m "message"'}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'The "-s" flag is important, the commit won\'t go through otherwise'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["To push the current branch and the changes and set the remote as upstream, use ",(0,t.jsx)(n.code,{children:"git push --set-upstream origin SPACECAT-<issue_number>-<issue_name>"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Alternatively push the changes if the branch already exists in the remote repository."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"After work is done, create a pull request for the branch."}),"\n",(0,t.jsx)(n.li,{children:"Ask another team member to review the changes, when he approves the changes, merge the chages into main branch."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"This framework provides a robust, BDD-based approach to testing Kubernetes clusters and resources. By following the above instructions, you can extend, modify, and run tests tailored to your specific needs."}),"\n",(0,t.jsx)(n.p,{children:"Feel free to customize the framework to accommodate new Kubernetes features and application requirements."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);