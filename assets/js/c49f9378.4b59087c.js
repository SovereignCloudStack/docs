"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20126],{71575:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"iaas/components/simple-stress","title":"Simple Stress","description":"Overview","source":"@site/docs/02-iaas/components/simple-stress.md","sourceDirName":"02-iaas/components","slug":"/iaas/components/simple-stress","permalink":"/docs/iaas/components/simple-stress","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/02-iaas/components/simple-stress.md","tags":[],"version":"current","sidebarPosition":55,"frontMatter":{"sidebar_label":"Simple Stress","sidebar_position":55}}');var t=s(74848),r=s(28453);const o={sidebar_label:"Simple Stress",sidebar_position:55},a="Simple Stress",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Defaults",id:"defaults",level:2},{value:"Usage",id:"usage",level:2},{value:"Config files",id:"config-files",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"simple-stress",children:"Simple Stress"})}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The OpenStack Simple Stress is a small stress test for your Openstack Cluster. You can use it for burnin tests or if you want to monitor your cluster perfomance.\nIt is able to start a predefined amount of Servers in specific networks in parallel and serial and removes them afterwards, so you can test your environment to the limits."}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.p,{children:"Prepare to use the Openstack Simple Stress."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"git clone https://github.com/osism/openstack-simple-stress\ncd openstack-simple-stress\npipenv install\npipenv shell\n"})}),"\n",(0,t.jsx)(n.h2,{id:"defaults",children:"Defaults"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"main.py"})," command and the default options while executing the command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" --cleanup       true\n --cloud         simple-stress\n --compute-zone  nova\n --debug         false\n --delete        true\n --flavor        SCS-2V-8\n --floating      false\n --image         Ubuntu 22.04\n --interval      10  (seconds)\n --keypair       unset\n --network       simple-stress\n --network-zone  nova\n --number        1\n --parallel      1\n --prefix        simple-stress\n --storage-zone  simple-stress\n --timeout       600 (seconds)\n --volume        false\n --volume-number 1\n --volume-size   1 (gigabyte)\n --wait          true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["There must be a ",(0,t.jsx)(n.code,{children:"clouds.yml"})," and a ",(0,t.jsx)(n.code,{children:"secure.yml"})," file in the directory where the OpenStack Simple Stress will be executed, examples are provided within the git repository."]}),"\n",(0,t.jsxs)(n.p,{children:["The cloud profile to be used can be specified via the optional ",(0,t.jsx)(n.code,{children:"--cloud"})," parameter. By default, the cloud profile with the name ",(0,t.jsx)(n.code,{children:"simple-stress"})," is used."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ python src/main.py -h\nusage: main [-h] [--cleanup] [--cloud CLOUD] [--compute-zone COMPUTE_ZONE] [--config-dir DIR]\n            [--config-file PATH] [--debug] [--delete] [--flavor FLAVOR] [--floating] [--image IMAGE]\n            [--interval INTERVAL] [--keypair KEYPAIR] [--network NETWORK] [--network-zone NETWORK_ZONE]\n            [--nocleanup] [--nodebug] [--nodelete] [--nofloating] [--novolume] [--nowait]\n            [--number NUMBER] [--parallel PARALLEL] [--prefix PREFIX] [--storage-zone STORAGE_ZONE]\n            [--timeout TIMEOUT] [--volume] [--volume-number VOLUME_NUMBER] [--volume-size VOLUME_SIZE]\n            [--wait]\n\noptions:\n  -h, --help            show this help message and exit\n  --cleanup\n  --cloud CLOUD         Cloud name\n  --compute-zone COMPUTE_ZONE\n                        Compute availability zone to use\n  --config-dir DIR      Path to a config directory to pull `*.conf` files from. This file set is sorted,\n                        so as to provide a predictable parse order if individual options are over-\n                        ridden. The set is parsed after the file(s) specified via previous --config-\n                        file, arguments hence over-ridden options in the directory take precedence. This\n                        option must be set from the command-line.\n  --config-file PATH    Path to a config file to use. Multiple config files can be specified, with\n                        values in later files taking precedence. Defaults to None. This option must be\n                        set from the command-line.\n  --debug\n  --delete\n  --flavor FLAVOR\n  --floating\n  --image IMAGE\n  --interval INTERVAL\n  --keypair KEYPAIR\n  --network NETWORK\n  --network-zone NETWORK_ZONE\n                        Network availability zone to use\n  --nocleanup           The inverse of --cleanup\n  --nodebug             The inverse of --debug\n  --nodelete            The inverse of --delete\n  --nofloating          The inverse of --floating\n  --novolume            The inverse of --volume\n  --nowait              The inverse of --wait\n  --number NUMBER\n  --parallel PARALLEL\n  --prefix PREFIX\n  --storage-zone STORAGE_ZONE\n                        Storage availability zone to use\n  --timeout TIMEOUT\n  --volume\n  --volume-number VOLUME_NUMBER\n  --volume-size VOLUME_SIZE\n  --wait\n"})}),"\n",(0,t.jsx)(n.p,{children:"Running a small and simple test on your Openstack environment, using Ubuntu_22.04 image with the flavor of 2VCPUs and 8Gigabytes of RAM, starting 6 servers, 2 parallel each with a volume size of 20Gigabytes."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ python src/main.py --network test-net --flavor SCS-2V-8 --image Ubuntu_22.04 --number 6 --parallel 2 --volume-size 20\n2024-04-23 11:47:16 | INFO     | Checking flavor SCS-2V-8\n2024-04-23 11:47:17 | INFO     | flavor.id = 926f952f-0714-4c55-92c2-7514191fecce\n2024-04-23 11:47:17 | INFO     | Checking image Ubuntu_22.04\n2024-04-23 11:47:17 | INFO     | image.id = 667649d6-e828-403b-8871-15dde7b9ce85\n2024-04-23 11:47:17 | INFO     | Checking network test-net\n2024-04-23 11:47:18 | INFO     | network.id = 9688192e-11dd-4618-a18c-99d3267f630a\n2024-04-23 11:47:18 | INFO     | Creating server simple-stress-0\n2024-04-23 11:47:18 | INFO     | Creating server simple-stress-1\n2024-04-23 11:47:18 | INFO     | Waiting for server 049bf974-b0fd-467f-aabd-3593b2a409a4 (simple-stress-0)\n2024-04-23 11:47:18 | INFO     | Waiting for server e485697f-feae-458c-952d-000072374c3f (simple-stress-1)\n2024-04-23 11:47:28 | INFO     | Waiting for boot / test results of 049bf974-b0fd-467f-aabd-3593b2a409a4 (simple-stress-0)\n2024-04-23 11:47:29 | INFO     | Waiting for boot / test results of e485697f-feae-458c-952d-000072374c3f (simple-stress-1)\n2024-04-23 11:47:39 | INFO     | Deleting server 049bf974-b0fd-467f-aabd-3593b2a409a4 (simple-stress-0)\n2024-04-23 11:47:39 | INFO     | Waiting for deletion of server 049bf974-b0fd-467f-aabd-3593b2a409a4 (simple-stress-0)\n2024-04-23 11:47:39 | INFO     | Deleting server e485697f-feae-458c-952d-000072374c3f (simple-stress-1)\n2024-04-23 11:47:40 | INFO     | Waiting for deletion of server e485697f-feae-458c-952d-000072374c3f (simple-stress-1)\n2024-04-23 11:47:49 | INFO     | Creating server simple-stress-2\n2024-04-23 11:47:50 | INFO     | Creating server simple-stress-3\n2024-04-23 11:47:50 | INFO     | Waiting for server 26595dd3-09d4-4758-8d1f-58a40b681d11 (simple-stress-2)\n2024-04-23 11:47:51 | INFO     | Waiting for server a098cc12-94ff-4036-bf42-4fc08287809f (simple-stress-3)\n2024-04-23 11:48:00 | INFO     | Waiting for boot / test results of 26595dd3-09d4-4758-8d1f-58a40b681d11 (simple-stress-2)\n2024-04-23 11:48:01 | INFO     | Waiting for boot / test results of a098cc12-94ff-4036-bf42-4fc08287809f (simple-stress-3)\n2024-04-23 11:48:11 | INFO     | Deleting server a098cc12-94ff-4036-bf42-4fc08287809f (simple-stress-3)\n2024-04-23 11:48:12 | INFO     | Waiting for deletion of server a098cc12-94ff-4036-bf42-4fc08287809f (simple-stress-3)\n2024-04-23 11:48:12 | INFO     | Deleting server 26595dd3-09d4-4758-8d1f-58a40b681d11 (simple-stress-2)\n2024-04-23 11:48:12 | INFO     | Waiting for deletion of server 26595dd3-09d4-4758-8d1f-58a40b681d11 (simple-stress-2)\n2024-04-23 11:48:22 | INFO     | Creating server simple-stress-4\n2024-04-23 11:48:22 | INFO     | Waiting for server 05b9f996-5a06-4359-b495-3463cc7b81e0 (simple-stress-4)\n2024-04-23 11:48:22 | INFO     | Creating server simple-stress-5\n2024-04-23 11:48:23 | INFO     | Waiting for server 8d372de6-ca07-4afb-9e80-1589fd5242e8 (simple-stress-5)\n2024-04-23 11:48:43 | INFO     | Waiting for boot / test results of 05b9f996-5a06-4359-b495-3463cc7b81e0 (simple-stress-4)\n2024-04-23 11:48:43 | INFO     | Waiting for boot / test results of 8d372de6-ca07-4afb-9e80-1589fd5242e8 (simple-stress-5)\n2024-04-23 11:48:55 | INFO     | Deleting server 05b9f996-5a06-4359-b495-3463cc7b81e0 (simple-stress-4)\n2024-04-23 11:48:55 | INFO     | Deleting server 8d372de6-ca07-4afb-9e80-1589fd5242e8 (simple-stress-5)\n2024-04-23 11:48:55 | INFO     | Waiting for deletion of server 05b9f996-5a06-4359-b495-3463cc7b81e0 (simple-stress-4)\n2024-04-23 11:48:55 | INFO     | Waiting for deletion of server 8d372de6-ca07-4afb-9e80-1589fd5242e8 (simple-stress-5)\n2024-04-23 11:49:05 | INFO     | Server 049bf974-b0fd-467f-aabd-3593b2a409a4 finished\n2024-04-23 11:49:05 | INFO     | Server e485697f-feae-458c-952d-000072374c3f finished\n2024-04-23 11:49:05 | INFO     | Server a098cc12-94ff-4036-bf42-4fc08287809f finished\n2024-04-23 11:49:05 | INFO     | Server 26595dd3-09d4-4758-8d1f-58a40b681d11 finished\n2024-04-23 11:49:05 | INFO     | Server 05b9f996-5a06-4359-b495-3463cc7b81e0 finished\n2024-04-23 11:49:05 | INFO     | Server 8d372de6-ca07-4afb-9e80-1589fd5242e8 finished\n2024-04-23 11:49:05 | INFO     | Runtime: 107.4460s\n"})}),"\n",(0,t.jsx)(n.p,{children:"Using a config directory with configfiles to run the test."}),"\n",(0,t.jsxs)(n.p,{children:["Path to a config directory to pull ",(0,t.jsx)(n.code,{children:"*.conf"})," files from. This file set is sorted,\nso as to provide a predictable parse order if individual options are over-ridden.\nThe set is parsed after the file(s) specified via previous --config file,\narguments hence over-ridden options in the directory take precedence. This\noption must be set from the command-line."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"python src/main.py --config-dir /path/to/config-dir\n"})}),"\n",(0,t.jsx)(n.h2,{id:"config-files",children:"Config files"}),"\n",(0,t.jsxs)(n.p,{children:["The config files which can be used for ",(0,t.jsx)(n.code,{children:"main.py"})," are using the ",(0,t.jsx)(n.a,{href:"https://docs.openstack.org/oslo.config/latest/configuration/quickstart.html",children:"oslo.config format"}),", you can set the command line options as ",(0,t.jsx)(n.code,{children:"key = value pair"})," and create your own config files matching your setup."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="mytest.conf"',children:"[DEFAULT]\ncloud = simple-stress\nnetwork = test-net\nnumber = 6\nparallel = 2\nflavor = SCS-2V-8\nimage = Ubuntu_22.04\nvolume-size = 20\n"})})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);