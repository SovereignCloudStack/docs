"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[93402],{36857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"operations/iam/identity-federation-in-scs","title":"Identity Federation in SCS","description":"SovereignCloudStack wants to make it possible for operators to delegate","source":"@site/contributor-docs/operations/iam/identity-federation-in-scs.md","sourceDirName":"operations/iam","slug":"/operations/iam/identity-federation-in-scs","permalink":"/contributor-docs/operations/iam/identity-federation-in-scs","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Identity Federation in SCS","type":null,"status":"Draft","track":"Global"},"sidebar":"devDocs","previous":{"title":"Documentation for SCS Contributors","permalink":"/contributor-docs/"},"next":{"title":"OpenStack Federation via OpenID-Connect","permalink":"/contributor-docs/operations/iam/openstack-federation-via-oidc"}}');var i=n(74848),s=n(28453);const a={title:"Identity Federation in SCS",type:null,status:"Draft",track:"Global"},r=void 0,c={},d=[{value:"1. IaaS / OpenStack",id:"1-iaas--openstack",level:2},{value:"2. CaaS",id:"2-caas",level:2}];function l(e){const t={a:"a",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"SovereignCloudStack wants to make it possible for operators to delegate\nadministration of user identities to the organizational entities that the\nusers are part of. Usually that's customer organizations but it could also\nbe the operator itself. Federation protocols like OpenID Connect can be used\nto achieve that goal. To simplify connecting the different parts of SCS\nto customer owned IAM solutions, SCS deploys Keycloak as central Identity\nProvider (IdP) service."}),"\n",(0,i.jsxs)(t.p,{children:["Currently this is deployed automatically only in the ",(0,i.jsx)(t.a,{href:"https://docs.scs.community/docs/iaas/guides/deploy-guide/examples/testbed/",children:"osism/testbed"}),",\nwhich provides ",(0,i.jsx)(t.a,{href:"https://docs.scs.community/docs/iaas/guides/deploy-guide/examples/testbed#authentication-with-oidc",children:"its own documentation for authentication with OIDC"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The following sections describe how this is done."}),"\n",(0,i.jsx)(t.h2,{id:"1-iaas--openstack",children:"1. IaaS / OpenStack"}),"\n",(0,i.jsxs)(t.p,{children:["To provide Infrastrucure as a Service SCS builds upon\nOpenStack. See section ",(0,i.jsx)(t.a,{href:"https://docs.scs.community/dev-docs/operations/iam/openstack-federation-via-oidc",children:"OpenStack Federation via OpenID-Connect"}),"\nfor more details on identity federation for OpenStack."]}),"\n",(0,i.jsx)(t.h2,{id:"2-caas",children:"2. CaaS"}),"\n",(0,i.jsxs)(t.p,{children:["To provide Container as a Service SCS builds upon\nKubernetes. There is\n",(0,i.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/issues/issues/373",children:"work in progress"}),"\nto optionally connect Kubernetes to Keycloak and to\nmap authorization decisions based on claims via cluster role bindings."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(96540);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);