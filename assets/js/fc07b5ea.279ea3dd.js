"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[33760],{13846:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"certification/pipeline","title":"SCS Compliance Check Pipeline Manual","description":"The SCS compliance check suite runs automated tests, generates a signed report for the run, and feeds it to","source":"@site/standards/certification/pipeline.md","sourceDirName":"certification","slug":"/certification/pipeline","permalink":"/standards/certification/pipeline","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"standards","previous":{"title":"overview","permalink":"/standards/certification/overview"},"next":{"title":"Overview","permalink":"/standards/standards/overview"}}');var i=t(74848),o=t(28453);const a={},c="SCS Compliance Check Pipeline Manual",r={},l=[{value:"Common requirements for the compliance checks",id:"common-requirements-for-the-compliance-checks",level:2},{value:"for SCS-compatible IaaS",id:"for-scs-compatible-iaas",level:3},{value:"How to add a new test subject to the official pipeline",id:"how-to-add-a-new-test-subject-to-the-official-pipeline",level:2},{value:"for SCS-compatible IaaS",id:"for-scs-compatible-iaas-1",level:3},{value:"How to feed the compliance monitor yourself",id:"how-to-feed-the-compliance-monitor-yourself",level:2},{value:"for SCS-compatible IaaS",id:"for-scs-compatible-iaas-2",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"scs-compliance-check-pipeline-manual",children:"SCS Compliance Check Pipeline Manual"})}),"\n",(0,i.jsx)(n.p,{children:'The SCS compliance check suite runs automated tests, generates a signed report for the run, and feeds it to\nthe compliance monitor. Roughly speaking, this process has to be performed daily, for instance, using a\ncontinuous-integration "pipeline".'}),"\n",(0,i.jsx)(n.p,{children:"Providers of public clouds do not need to use their own pipelines; those clouds can be tested via the\nofficial SCS compliance check pipeline."}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, if using this pipeline is not feasible (for instance, for private clouds) or not desired,\ncloud-service providers can run the tests and feed the compliance monitor themselves."}),"\n",(0,i.jsx)(n.p,{children:"The next subsection shows common requirements for each of these two cases. The two subsections after that\nare each dedicated to the specific cases."}),"\n",(0,i.jsx)(n.h2,{id:"common-requirements-for-the-compliance-checks",children:"Common requirements for the compliance checks"}),"\n",(0,i.jsx)(n.h3,{id:"for-scs-compatible-iaas",children:"for SCS-compatible IaaS"}),"\n",(0,i.jsxs)(n.p,{children:["You need an OpenStack project that allows for at least one server and one router, possibly more if it's going\nto be used for purposes other than compliance testing (such as the\n",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/openstack-health-monitor",children:"OpenStack Health Monitor"})," or the\n",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/scs-health-monitor",children:"SCS Health Monitor"}),")."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create an application credential. It must be possible to create resources such as servers, routers, etc."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Create a new branch in ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards",children:"the standards repository"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"git clone git@github.com:SovereignCloudStack/standards.git"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"cd standards"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"git checkout -b feat/add_my_cloud"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CAUTION"}),": If you are not a member of the SCS Github org, this won't work.\nAsk the SCS team (or other members) to add you. Alternatively, you may fork the repository on\nGithub first and then clone the fork."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add your subject to the results table. This is necessary so your subject shows up in the\n",(0,i.jsx)(n.a,{href:"https://compliance.sovereignit.cloud/page/table",children:"compliance monitor web-site"}),". Add the following lines\n(substituting all-caps parts except ",(0,i.jsx)(n.code,{children:"HM"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:" | [gx-scs](https://github.com/SovereignCloudStack/docs/blob/main/community/cloud-resources/plusserver-gx-scs.md) | Dev environment provided for SCS & GAIA-X context | plusserver GmbH |\n {#- #} [{{ results | pick('gx-scs', iaas) | summary }}]({{ detail_url('gx-scs', iaas) }}) {# -#}\n | [HM](https://health.gx-scs.sovereignit.cloud:3000/) |\n+| [SUBJECT_NAME](YOUR_URL) | DESCRIPTION | COMPANY_NAME |\n+{#- #} [{{ results | pick('SUBJECT_NAME', iaas) | summary }}]({{ detail_url('SUBJECT_NAME', iaas) }}) {# -#}\n+| [HM](HEALTH_MONITOR_URL) |\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Ideally, insert the lines at a position that keeps the part of the table below ",(0,i.jsx)(n.code,{children:"gx-scs"})," sorted."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now you can proceed with the steps from one of the next subsections, depending on whether you want to\ncheck suite run by the SCS pipeline or not."}),"\n",(0,i.jsx)(n.h2,{id:"how-to-add-a-new-test-subject-to-the-official-pipeline",children:"How to add a new test subject to the official pipeline"}),"\n",(0,i.jsx)(n.h3,{id:"for-scs-compatible-iaas-1",children:"for SCS-compatible IaaS"}),"\n",(0,i.jsxs)(n.p,{children:["We are going to create a pull request that is very similar to real-life example that\n",(0,i.jsxs)(n.a,{href:"https://github.com/SovereignCloudStack/standards/pull/797",children:["adds the test subject ",(0,i.jsx)(n.code,{children:"scaleup-occ2"})]}),".\n(However, note that this example also adds an optional GitHub workflow, which we won't do here.)"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Modify ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/playbooks/clouds.yaml.j2",children:"playbooks/clouds.yaml.j2"}),".\nThis is necessary so that the tests can access your cloud.\nYou can use the following template (replace all-caps parts):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'  SUBJECT_NAME:\n    region_name: REGION\n    interface: "public"\n    identity_api_version: 3\n    auth_type: "v3applicationcredential"\n    auth:\n      auth_url: AUTH_URL\n      application_credential_id: "{{ clouds_conf.SUBJECT_NAME_ac_id }}"\n      application_credential_secret: "{{ clouds_conf.SUBJECT_NAME_a_ac_secret }}"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Note that you need to replace dashes (and other special characters) by underscores in the last two lines."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add your subject to ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/Tests/config.toml",children:"Tests/config.toml"}),".\nThis is necessary so that your cloud will be included in the nightly tests. Add a line like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:' [presets.all]\n scopes = [\n     "scs-compatible-iaas",\n ]\n subjects = [\n     "gx-scs",\n+    "SUBJECT_NAME",\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Ideally, insert your subject so that the list (after ",(0,i.jsx)(n.code,{children:"gx-scs"}),") remains sorted."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add your subject to ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/compliance-monitor/bootstrap.yaml",children:"compliance-monitor/bootstrap.yaml"}),".\nThis is necessary to that the reports will be accepted as genuine. Add a section like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"   - subject: artcodix\n     delegates:\n       - zuul_ci\n+  - subject: SUBJECT_NAME\n+    delegates:\n+      - zuul_ci\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Again, insert your subject so that the list (after ",(0,i.jsx)(n.code,{children:"gx-scs"}),") remains sorted."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Finally, add secrets to ",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/.zuul.d/secure.yaml",children:".zuul.d/secure.yaml"}),".\nThis is necessary so the tests can access your cloud."]}),"\n",(0,i.jsx)(n.p,{children:"This step is the most involved, and you can always have us do it for you; in that case, please send us\nthe application credential id and secret via an encrypted channel, e.g. Matrix."}),"\n",(0,i.jsxs)(n.p,{children:["To proceed, you need ",(0,i.jsx)(n.code,{children:"zuul-client"})," installed:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"pipx install zuul-client\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then you can execute:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"$ zuul-client --zuul-url https://zuul.sovereignit.cloud/ encrypt --tenant scs --project SovereignCloudStack/standards\n<PASTE application credential id HERE>\n<HIT ctrl-d>\n\n...\n - secret:\n     name: <name>\n     data:\n       <fieldname>: !encrypted/pkcs1-oaep\n         - ...\n\n$ zuul-client --zuul-url https://zuul.sovereignit.cloud/ encrypt --tenant scs --project SovereignCloudStack/standards\n<PASTE application credential secret HERE>\n<HIT ctrl-d>\n\n...\n - secret:\n     name: <name>\n     data:\n       <fieldname>: !encrypted/pkcs1-oaep\n         - ...\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Copy the parts of the respective outputs starting in the final line shown here (the one starting ",(0,i.jsx)(n.code,{children:"-"}),").\nInsert them like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:"+   SUBJECT_NAME_ac_id: !encrypted/pkcs1-oaep\n+     - ENCRYPTED_ID\n+   SUBJECT_NAME_ac_secret: !encrypted/pkcs1-oaep\n+     - ENCRYPTED_SECRET\n"})}),"\n",(0,i.jsx)(n.p,{children:"Note that you have to use the same keys as in Step 1 (that is, with special characters replaced)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Commit your changes and open a pull request:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'git commit -asm "Add SUBJECT_NAME"\ngit push  # the output of this command will show you the URL for creating the pull request\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-to-feed-the-compliance-monitor-yourself",children:"How to feed the compliance monitor yourself"}),"\n",(0,i.jsx)(n.h3,{id:"for-scs-compatible-iaas-2",children:"for SCS-compatible IaaS"}),"\n",(0,i.jsx)(n.p,{children:"Note: you may have to adapt these instructions to your infrastructure. For instance, the secrets\nwe create here are stored locally. If you want to include the check suite into your own\ncontinuous-integration pipeline, you may want to use some dedicated credential store and mechanism for\ninjecting secrets."}),"\n",(0,i.jsxs)(n.p,{children:["You may want to take inspiration from our own Zuul setup by looking at\n",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/tree/main/.zuul.d",children:".zuul.d"})," and\n",(0,i.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/tree/main/playbooks",children:"playbooks"}),".\nHowever, don't be overwhelmed by the complexities of Zuul; it's well possible to use other solutions,\nincluding a cronjob."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install requirements."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"virtualenv .venv\n. .venv/bin/activate\npip install -r requirements.txt\npip install passlib argon2_cffi  # these are only needed for Step 2\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run our support script (substitute ",(0,i.jsx)(n.code,{children:"$SUBJECT_NAME"})," appropriately):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"Tests/add_subject.py $SUBJECT_NAME\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Follow the instructions.\nAt the end, it will tell you to amend the file ",(0,i.jsx)(n.code,{children:"compliance-monitor/boostrap.py"}),". Do so."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Make sure you have ",(0,i.jsx)(n.code,{children:"$SUBJECT_NAME"})," in your ",(0,i.jsx)(n.code,{children:".config/openstack/clouds.yaml"})," like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'  SUBJECT_NAME:\n    region_name: REGION\n    interface: "public"\n    identity_api_version: 3\n    auth_type: "v3applicationcredential"\n    auth:\n      auth_url: AUTH_URL\n      application_credential_id: "APPLICATION_CREDENTIAL_ID"\n      application_credential_secret: "APPLICATION_CREDENTIAL_SECRET"\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Perform a test run of the check suite like so:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"python3 Tests/scs-test-runner.py --config Tests/config.toml run --scope scs-compatible-iaas --subject $SUBJECT_NAME\n"})}),"\n",(0,i.jsx)(n.p,{children:"If the report can't be submitted at the very end, this is to be expected, because the keyfile is not yet\nknown to the compliance monitor. To change this, we proceed to the next step."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Commit your changes and open a pull request:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'git commit -asm "Add SUBJECT_NAME"\ngit push  # the output of this command will show you the URL for creating the pull request\n'})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);