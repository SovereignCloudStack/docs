"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[92864],{10090:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"container/components/cluster-stacks/components/cluster-stack-operator/topics/managing-clusterstacks","title":"Managing ClusterStack objects","description":"The ClusterStack object is the central resource that you have to work with. You have to specify a provider, the name of the cluster stack you want to use, as well as the Kubernetes minor version.","source":"@site/docs/03-container/components/cluster-stacks/components/cluster-stack-operator/topics/managing-clusterstacks.md","sourceDirName":"03-container/components/cluster-stacks/components/cluster-stack-operator/topics","slug":"/container/components/cluster-stacks/components/cluster-stack-operator/topics/managing-clusterstacks","permalink":"/docs/container/components/cluster-stacks/components/cluster-stack-operator/topics/managing-clusterstacks","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/cluster-stacks/components/cluster-stack-operator/topics/managing-clusterstacks.md","tags":[],"version":"current","frontMatter":{}}');var n=s(74848),c=s(28453);const r={},a="Managing ClusterStack objects",i={},u=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"managing-clusterstack-objects",children:"Managing ClusterStack objects"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"ClusterStack"})," object is the central resource that you have to work with. You have to specify a provider, the name of the cluster stack you want to use, as well as the Kubernetes minor version."]}),"\n",(0,n.jsxs)(t.p,{children:["If you want to use multiple different Kubernetes minor versions, you will have to create multiple ",(0,n.jsx)(t.code,{children:"ClusterStack"})," objects. The same goes for multiple providers, or multiple cluster stacks (e.g. ferrol) that might have different features."]}),"\n",(0,n.jsxs)(t.p,{children:["In order to use a cluster stack in a specific version, you have two options: first, you can specify a list of versions in ",(0,n.jsx)(t.code,{children:"spec.versions"}),". Second, you can enable ",(0,n.jsx)(t.code,{children:"autoSubscribe"}),", so that the operator will automatically check for the latest version and make it available to you."]}),"\n",(0,n.jsx)(t.p,{children:"Usually, you will always want to use auto-subscribe, so that the operator takes care of providing you with the latest versions."})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var o=s(96540);const n={},c=o.createContext(n);function r(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(c.Provider,{value:t},e.children)}}}]);