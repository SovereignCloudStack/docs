"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[40935],{69676:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"operating-scs/components/scs-health-monitor/SetupObservabilityStack","title":"Observability stack quickstart","description":"Prerequisites","source":"@site/docs/04-operating-scs/components/scs-health-monitor/SetupObservabilityStack.md","sourceDirName":"04-operating-scs/components/scs-health-monitor","slug":"/operating-scs/components/scs-health-monitor/SetupObservabilityStack","permalink":"/docs/operating-scs/components/scs-health-monitor/SetupObservabilityStack","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/04-operating-scs/components/scs-health-monitor/SetupObservabilityStack.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Testflow-Infrastructure","permalink":"/docs/operating-scs/components/scs-health-monitor/Testflow"},"next":{"title":"Central API","permalink":"/docs/category/central-api"}}');var n=t(74848),o=t(28453);const a={},c="Observability stack quickstart",l={},i=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup process",id:"setup-process",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"observability-stack-quickstart",children:"Observability stack quickstart"})}),"\n",(0,n.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(s.p,{children:["Kubernetes is required to setup this observability stack consisting of Prometheus, Grafana and Prometheus push gateway.\nOne recommendation for setting up a local Kubernetes environment is to use ",(0,n.jsx)(s.a,{href:"https://kind.sigs.k8s.io/",children:"KIND (Kubernetes in Docker)"}),". KIND provides a lightweight way to create Kubernetes clusters using Docker containers. ",(0,n.jsx)(s.a,{href:"https://docs.docker.com/desktop/kubernetes/",children:"Docker Desktop"})," also has support for kubernetes."]}),"\n",(0,n.jsx)(s.h2,{id:"setup-process",children:"Setup process"}),"\n",(0,n.jsx)(s.p,{children:"To set up Prometheus stack and Prometheus Pushgateway on local Kubernetes using Helm, you can follow these steps:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Add Helm Chart Repositories:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\n"})}),"\n",(0,n.jsxs)(s.ol,{start:"2",children:["\n",(0,n.jsx)(s.li,{children:"Install Prometheus Stack:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'helm install my-kube-prometheus-stack prometheus-community/kube-prometheus-stack --version 57.0.3 -f "./Values/PrometheusStackValues.yaml"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This command will install the Prometheus stack on your Kubernetes cluster ",(0,n.jsx)(s.a,{href:"https://github.com/SovereignCloudStack/scs-health-monitor/tree/ba9049292c3da5afcdae52b1cca15759e074e950/docs/ObservabilityStack/Values/PrometheusStackValues.yaml",children:"using these values"}),"."]}),"\n",(0,n.jsxs)(s.ol,{start:"3",children:["\n",(0,n.jsx)(s.li,{children:"Install Prometheus Pushgateway:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'helm install my-prometheus-pushgateway prometheus-community/prometheus-pushgateway --version 2.8.0 -f "./Values/PrometheusPushGateway.yaml"\n'})}),"\n",(0,n.jsxs)(s.p,{children:["This command will install Prometheus Pushgateway on your Kubernetes cluster ",(0,n.jsx)(s.a,{href:"https://github.com/SovereignCloudStack/scs-health-monitor/tree/ba9049292c3da5afcdae52b1cca15759e074e950/docs/ObservabilityStack/Values/PrometheusPushGateway.yaml",children:"using these values"}),"."]}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsx)(s.li,{children:"Set Docker Context:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl config get-contexts\nkubectl config use-context docker-desktop\n"})}),"\n",(0,n.jsx)(s.p,{children:"Ensure that the Docker context is correctly set to your local Kubernetes cluster."}),"\n",(0,n.jsxs)(s.ol,{start:"5",children:["\n",(0,n.jsx)(s.li,{children:"Expose Services Locally:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f ./k8s/nodePorts.yaml\n"})}),"\n",(0,n.jsx)(s.p,{children:"This command will apply the configuration to expose services using nodePort service on Kubernetes."}),"\n",(0,n.jsx)(s.p,{children:"An alternative to using NodePort for exposing services to localhost in a local Kubernetes setup is to use kubectl port-forward. This command allows you to forward local ports to a port on a specific pod within the Kubernetes cluster. Here's how you can use it:"}),"\n",(0,n.jsxs)(s.ol,{start:"6",children:["\n",(0,n.jsx)(s.li,{children:"Port Forwarding for Prometheus Stack:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"\nkubectl port-forward svc/<prometheus-service-name> <local-port>:<prometheus-port>\n"})}),"\n",(0,n.jsx)(s.p,{children:"Replace <prometheus-service-name> with the actual name of the Prometheus service in your Kubernetes cluster. <local-port> is the port number on your localhost where you want to access Prometheus, and <prometheus-port> is the port on which Prometheus is running within the cluster. The same applies to prometheus push gateway or any other service you may want to expose."}),"\n",(0,n.jsx)(s.p,{children:"For example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl port-forward svc/my-kube-prometheus-stack-prometheus 9090:9090\nkubectl port-forward svc/my-prometheus-pushgateway 9091:9091\n"})}),"\n",(0,n.jsx)(s.p,{children:'Make sure to replace "./Values/PrometheusStackValues" with the actual path to your Prometheus Stack values file. Also, adjust the path to the nodePorts.yaml file if it\'s located in a different directory.'}),"\n",(0,n.jsx)(s.p,{children:"Remember to replace placeholders such as my-kube-prometheus-stack and my-prometheus-pushgateway with appropriate names for your deployments."}),"\n",(0,n.jsx)(s.p,{children:"Once you've executed these commands, Prometheus stack and Prometheus Pushgateway should be set up and accessible on your local Kubernetes cluster."}),"\n",(0,n.jsxs)(s.ol,{start:"7",children:["\n",(0,n.jsx)(s.li,{children:"Uninstall helm chart\nIf you want to reinstall or remove the deployed observability stack, you can use the following commands:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"# List deployed helm charts\nhelm list\n\n# Delete helm chart (all deployed k8s resources) with name <chart_name>\nhelm uninstall <chart_name>\n"})})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>c});var r=t(96540);const n={},o=r.createContext(n);function a(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);