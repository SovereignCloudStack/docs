"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[84398],{93851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"scs-0401-v1-status-page-reference-implementation-decision","title":"Status page reference implementation decision","description":"Introduction","source":"@site/standards/scs-0401-v1-status-page-reference-implementation-decision.md","sourceDirName":".","slug":"/scs-0401-v1-status-page-reference-implementation-decision","permalink":"/standards/scs-0401-v1-status-page-reference-implementation-decision","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Status page reference implementation decision","type":"Decision Record","status":"Draft","track":"Ops"},"sidebar":"standards","previous":{"title":"scs-0401: Status page reference implementation decision","permalink":"/standards/ops/scs-0401"},"next":{"title":"scs-0402: Status page OpenAPI decision","permalink":"/standards/ops/scs-0402"}}');var a=n(74848),i=n(28453);const o={title:"Status page reference implementation decision",type:"Decision Record",status:"Draft",track:"Ops"},r=void 0,c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Decision",id:"decision",level:2},{value:"Programming Language",id:"programming-language",level:3},{value:"Database",id:"database",level:3}];function l(e){const t={a:"a",h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(t.p,{children:["For the reference implementation of the status page API defined by the ",(0,a.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/status-page-openapi",children:"OpenAPI spec"})," some decision should be made to which technology to be used and why."]}),"\n",(0,a.jsx)(t.p,{children:"A reference implementation should be of use to most of the intended group, but is not necessarily applicable for every use case."}),"\n",(0,a.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,a.jsx)(t.p,{children:"For a reference implementation to be of any use, some common and widely used technologies should be used, so it's useful to most of the intended user group."}),"\n",(0,a.jsx)(t.h2,{id:"decision",children:"Decision"}),"\n",(0,a.jsx)(t.h3,{id:"programming-language",children:"Programming Language"}),"\n",(0,a.jsxs)(t.p,{children:["The status page application consists of an api server as well as a frontend. For implementing the ",(0,a.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/status-page-api",children:"api server"}),", which is generated from the ",(0,a.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/status-page-openapi",children:"OpenAPI spec"}),", ",(0,a.jsx)(t.a,{href:"https://go.dev/",children:"Go"})," was chosen, because of maturity and widespread usage as industry standard. Go, in particular, is a modern programming language and is commonly used in network and cloud computing environments."]}),"\n",(0,a.jsx)(t.h3,{id:"database",children:"Database"}),"\n",(0,a.jsxs)(t.p,{children:["As database, ",(0,a.jsx)(t.a,{href:"https://www.postgresql.org/",children:"PostgreSQL"})," was chosen, since it is a mature, well-known database. PostgreSQL can be run in various environments from small setups to scaled setups.\nFurthermore, PostgreSQL is a very healthy project with an active community and a solid license. It easily passed the ",(0,a.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/Drafts/OSS-Health.md",children:"SCS OSS health check"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(96540);const a={},i=s.createContext(a);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);