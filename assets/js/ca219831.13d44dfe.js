"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46471],{71535:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"application-examples/opendesk-on-scs/getting_started","title":"Getting started: Deployment from a local machine","description":"Please note the general Getting Started documentation by openDesk.","source":"@site/user-docs/application-examples/opendesk-on-scs/getting_started.md","sourceDirName":"application-examples/opendesk-on-scs","slug":"/application-examples/opendesk-on-scs/getting_started","permalink":"/user-docs/application-examples/opendesk-on-scs/getting_started","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"userDocs","previous":{"title":"Requirements","permalink":"/user-docs/application-examples/opendesk-on-scs/requirements"},"next":{"title":"Configuration","permalink":"/user-docs/application-examples/opendesk-on-scs/configuration"}}');var r=s(74848),o=s(28453);const a={},i="Getting started: Deployment from a local machine",l={},d=[{value:"Clone the openDesk repository",id:"clone-the-opendesk-repository",level:2},{value:"Add settings for your environment",id:"add-settings-for-your-environment",level:2},{value:"Choose your components",id:"choose-your-components",level:2},{value:"Basic configuration",id:"basic-configuration",level:2},{value:"Namespace",id:"namespace",level:2},{value:"Deploy an ingress resource inside the namespace",id:"deploy-an-ingress-resource-inside-the-namespace",level:2},{value:"Deployment",id:"deployment",level:2},{value:"First login",id:"first-login",level:2},{value:"Deploy the desired apps",id:"deploy-the-desired-apps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started-deployment-from-a-local-machine",children:"Getting started: Deployment from a local machine"})}),"\n",(0,r.jsxs)(n.p,{children:["Please note the general ",(0,r.jsx)(n.a,{href:"https://gitlab.opencode.de/bmi/opendesk/deployment/opendesk/-/blob/main/docs/getting-started.md",children:"Getting Started documentation"})," by openDesk."]}),"\n",(0,r.jsx)(n.h2,{id:"clone-the-opendesk-repository",children:"Clone the openDesk repository"}),"\n",(0,r.jsxs)(n.p,{children:["Clone the ",(0,r.jsx)(n.a,{href:"https://gitlab.opencode.de/bmi/opendesk/deployment/opendesk",children:"openDesk repository"})," to your local computer:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://gitlab.opencode.de/bmi/opendesk/deployment/opendesk\ncd opendesk\n"})}),"\n",(0,r.jsx)(n.h2,{id:"add-settings-for-your-environment",children:"Add settings for your environment"}),"\n",(0,r.jsx)(n.p,{children:"Create your own directory for one or more environments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir -p helmfile/environments/example-env/dev/\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In the folder you created, add one or more files with the configuration for your environment, e.g. ",(0,r.jsx)(n.code,{children:"values.yaml.gotmpl"})," (see the ",(0,r.jsx)(n.a,{href:"getting_started",children:"Getting Started"})," chapter for an example)."]}),"\n",(0,r.jsxs)(n.p,{children:["Reference the environment you want to deploy in ",(0,r.jsx)(n.code,{children:"helmfile.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cat helmfile.yaml  <<__EOF__\nexample-env:\n  values:\n    - "helmfile/environments/example-env/dev/*.yaml.gotmpl"\n__EOF__\n'})}),"\n",(0,r.jsx)(n.h2,{id:"choose-your-components",children:"Choose your components"}),"\n",(0,r.jsxs)(n.p,{children:["Decide which ",(0,r.jsx)(n.a,{href:"https://gitlab.opencode.de/bmi/opendesk/deployment/opendesk/-/blob/main/docs/components.md",children:"components"})," you want to deploy. If you start with some apps only, you can enable the rest of them later.\nIn the example configuration below all apps are enabled for the initial rollout."]}),"\n",(0,r.jsx)(n.h2,{id:"basic-configuration",children:"Basic configuration"}),"\n",(0,r.jsxs)(n.p,{children:["You can use the following example settings as a starting point for your ",(0,r.jsx)(n.code,{children:"helmfile/environments/example-env/dev/values.yaml.gotmpl"})," file. Please see the ",(0,r.jsx)(n.a,{href:"/user-docs/application-examples/opendesk-on-scs/configuration",children:"configuration"})," chapter for more details."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'{{/*\nSPDX-FileCopyrightText: 2024 Zentrum f\xfcr Digitale Souver\xe4nit\xe4t der \xd6ffentlichen Verwaltung (ZenDiS) GmbH\nSPDX-FileCopyrightText: 2023 Bundesministerium des Innern und f\xfcr Heimat, PG ZenDiS "Projektgruppe f\xfcr Aufbau ZenDiS"\nSPDX-License-Identifier: Apache-2.0\n*/}}\n\n---\ngrafana:\n  dashboards:\n    annotations:\n      "grafana-dashboard-folder": "openDesk: {{ env "NAMESPACE" | default "Main" }}"\n    enabled: true\n\nfunctional:\n  authentication:\n    twoFactor:\n      # Define a list of groups to enable 2FA for.\n      # Note: Removing a group from the list will not disable 2FA for the removed group.\n      groups: []\n\ncertificate:\n  issuerRef:\n    name: "letsencrypt-prod"\n  wildcard: true\n\ningress:\n  ingressClassName: "nginx"\n\npersistence:\n  storageClassNames:\n    RWX: "csi-cinder-sc-delete"\n    RWO: "csi-cinder-sc-delete"\n\nsmtp:\n  host: "host.example-relay.org"\n  username: "some-account"\n  port: 587\n\nturn:\n  server:\n    host: "turn.example.org"\n    port: "3478"\n  tls:\n    host: "turn.example.org"\n    port: "5349"\n\ncluster:\n  service:\n    type: "ClusterIP"\n  api:\n    domain: "api.example.org"\n    port: 6443\n  networking:\n    ingressGatewayIP: "YOUR-PUBLIC-IP"\n\nprometheus:\n  serviceMonitors:\n    enabled: true\n  podMonitors:\n    enabled: true\n  prometheusRules:\n    enabled: true\n\nsecurity:\n  clusterPostfix:\n    namespace: "swp-cross-instance-mail"\n\ndebug:\n  enabled: true\n\ndatabases:\n  oxAppsuite:\n    host: "mariadb"\n    # DB name has to set or else "configdb" will used while "openxchange" is created.\n    name: "openxchange"\n    username: "root"\n\ncollabora:\n  enabled: true\n\ncryptpad:\n  enabled: true\n\nelement:\n  enabled: true\n\nintercom:\n  enabled: true\n\njitsi:\n  enabled: true\n\nnextcloud:\n  enabled: true\n\nopenproject:\n  enabled: true\n\noxAppsuite:\n  enabled: true\n\noxConnector:\n  enabled: true\n\nxwiki:\n  enabled: true\n\n...\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"namespace",children:"Namespace"}),"\n",(0,r.jsx)(n.p,{children:"Create a namespace in your SCS cluster:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl create namespace your-namespace\n"})}),"\n",(0,r.jsx)(n.h2,{id:"deploy-an-ingress-resource-inside-the-namespace",children:"Deploy an ingress resource inside the namespace"}),"\n",(0,r.jsx)(n.p,{children:"Create an ingress resource:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cat >ingress-resource.yaml <<EOF\n---\napiVersion: "networking.k8s.io/v1"\nkind: "Ingress"\nmetadata:\n  name: "example.org"\n  annotations:\n    cert-manager.io/cluster-issuer: "letsencrypt-prod"\nspec:\n  ingressClassName: "nginx"\n  tls:\n    - hosts:\n      - "example.org"\n      - "*.example.org"\n      secretName: "opendesk-certificates-tls"\n  rules:\n    - host: "*.example.org"\n      http:\n        paths:\n          - pathType: "Prefix"\n            path: "/"\n            backend:\n              service:\n                name: "ums-portal-frontend"\n                port:\n                  number: 443\nEOF\n'})}),"\n",(0,r.jsx)(n.p,{children:"Deploy the ingress resource inside your namespace:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f ingress-resource.yaml -n your-namespace\n"})}),"\n",(0,r.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,r.jsx)(n.p,{children:"Trigger the deployment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'OPENDESK_SMTPRELAY_PASSWORD="************" OPENDESK_MASTER_PASSWORD="************" DOMAIN="example.org" helmfile apply -e example-env -n your-namespace\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Note that the ",(0,r.jsx)(n.a,{href:"helper/deploy-openDesk",children:"wrapper script"})," supports you in running some of the above tasks."]}),"\n",(0,r.jsx)(n.h2,{id:"first-login",children:"First login"}),"\n",(0,r.jsx)(n.p,{children:"Two accounts, an admin and a user account, are automatically created for you."}),"\n",(0,r.jsxs)(n.p,{children:["The default admin user is called ",(0,r.jsx)(n.code,{children:"default.admin"}),", you can retrieve its password by running:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl -n your-namespace get secret ums-nubus-credentials -o json | jq -r '.data.admin_password' | base64 -d\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The default user is called ",(0,r.jsx)(n.code,{children:"default.user"}),", you can retrieve its password by running:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl -n your-namespace get secret ums-nubus-credentials -o json | jq -r '.data.user_password' | base64 -d\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Open the portal in your browser, e.g. ",(0,r.jsx)(n.code,{children:"https://portal.example.org"})," and log in."]}),"\n",(0,r.jsx)(n.h2,{id:"deploy-the-desired-apps",children:"Deploy the desired apps"}),"\n",(0,r.jsxs)(n.p,{children:["To add an app later you don't have to run ",(0,r.jsx)(n.code,{children:"helmfile"})," in the top-level directory. You can ",(0,r.jsx)(n.code,{children:"cd"})," into the app's directory underneath ",(0,r.jsx)(n.code,{children:"helmfile/apps"})," an execute ",(0,r.jsx)(n.code,{children:"helmfile"})," in there. The advantage is that this is faster."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(96540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);