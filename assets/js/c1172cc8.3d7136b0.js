"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[73739],{36758:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"scs-0102-w1-image-metadata-implementation-testing","title":"SCS Image Metadata: Implementation and Testing Notes","description":"Implementation notes","source":"@site/standards/scs-0102-w1-image-metadata-implementation-testing.md","sourceDirName":".","slug":"/scs-0102-w1-image-metadata-implementation-testing","permalink":"/standards/scs-0102-w1-image-metadata-implementation-testing","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"SCS Image Metadata: Implementation and Testing Notes","type":"Supplement","track":"IaaS","status":"Draft","supplements":["scs-0102-v1-image-metadata.md"]},"sidebar":"standards","previous":{"title":"V1","permalink":"/standards/scs-0102-v1-image-metadata"},"next":{"title":"scs-0103: SCS Standard Flavors and Properties","permalink":"/standards/iaas/scs-0103"}}');var n=a(74848),i=a(28453);const o={title:"SCS Image Metadata: Implementation and Testing Notes",type:"Supplement",track:"IaaS",status:"Draft",supplements:["scs-0102-v1-image-metadata.md"]},m=void 0,l={},r=[{value:"Implementation notes",id:"implementation-notes",level:2},{value:"Automated tests",id:"automated-tests",level:2},{value:"Images sample",id:"images-sample",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Manual tests",id:"manual-tests",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"implementation-notes",children:"Implementation notes"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"https://github.com/osism/openstack-image-manager",children:"OpenStack Image Manager from OSISM"}),'\nwill create a set of images from a "spec file" provided by the user, which can also set the required properties\nfor these images.']}),"\n",(0,n.jsx)(t.h2,{id:"automated-tests",children:"Automated tests"}),"\n",(0,n.jsx)(t.h3,{id:"images-sample",children:"Images sample"}),"\n",(0,n.jsx)(t.p,{children:"Some checks need to be performed on a live instance. All publicly available images on this instance\nwill be checked for either only the mandatory properties or possibly also the recommended ones.\nAdditionally, a user can also decide to test their private images, although this isn't a necessity."}),"\n",(0,n.jsx)(t.h3,{id:"implementation",children:"Implementation"}),"\n",(0,n.jsxs)(t.p,{children:["The script ",(0,n.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/Tests/iaas/image-metadata/image-md-check.py",children:(0,n.jsx)(t.code,{children:"image-md-check.py"})}),"\nconnects to OpenStack and performs the checks described in this section."]}),"\n",(0,n.jsx)(t.h2,{id:"manual-tests",children:"Manual tests"}),"\n",(0,n.jsx)(t.p,{children:"None."})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>m});var s=a(96540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function m(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);