"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46008],{40264:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"container/components/cluster-stacks/components/csctl/getting_started","title":"Getting started","description":"A Cluster Stack is full template of a Kubernetes cluster. A Cluster Stack can be configured on every provider that supports Cluster API.","source":"@site/docs/03-container/components/cluster-stacks/components/csctl/getting_started.md","sourceDirName":"03-container/components/cluster-stacks/components/csctl","slug":"/container/components/cluster-stacks/components/csctl/getting_started","permalink":"/docs/container/components/cluster-stacks/components/csctl/getting_started","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/cluster-stacks/components/csctl/getting_started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Quickstart","permalink":"/docs/container/components/cluster-stacks/components/csctl/quickstart"},"next":{"title":"Developing and Testing csctl","permalink":"/docs/container/components/cluster-stacks/components/csctl/developing-and-testing-csctl"}}');var r=n(74848),c=n(28453);const o={},i="Getting started",l={},a=[{value:"Overview",id:"overview",level:2},{value:"Configuring csctl",id:"configuring-csctl",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,r.jsxs)(t.p,{children:["A ",(0,r.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/cluster-stacks",children:"Cluster Stack"})," is full template of a Kubernetes cluster. A Cluster Stack can be configured on every provider that supports Cluster API."]}),"\n",(0,r.jsx)(t.p,{children:"The Cluster Stack Operator facilitates using Cluster Stacks by automating all steps that users would have to do manually given they have a Cluster API management cluster."}),"\n",(0,r.jsx)(t.p,{children:"The csctl helps to generate all files and build node images based on provided scripts in a format that the Cluster Stack Operator can use."}),"\n",(0,r.jsx)(t.p,{children:"The csctl requires a certain directory structure and uses a special form of templating to insert the right versions in your configuration files (e.g. Helm charts)."}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"The directory structure is very important. If the directories are not configured properly, csctl will not be able to build the cluster-stack for you."}),"\n",(0,r.jsx)(t.p,{children:"You should must have the following content inside your directory:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"csctl.yaml: the configuration of csctl"}),"\n",(0,r.jsx)(t.li,{children:"cluster-addon directory: the directory containing the Helm chart for cluster addons (Chart.yaml, templates and Helm related files if required)"}),"\n",(0,r.jsx)(t.li,{children:"cluster-class directory: the directory containing the Helm chart for Cluster API resources, e.g. ClusterClass (Chart.yaml, templates and Helm related files if required)"}),"\n",(0,r.jsx)(t.li,{children:"node-image directory (optional): the directory containing config and associated scripts to build node images"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"configuring-csctl",children:"Configuring csctl"}),"\n",(0,r.jsxs)(t.p,{children:["The configuration of csctl has to be specified in the ",(0,r.jsx)(t.code,{children:"csctl.yaml"}),". It needs to follow this structure:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"apiVersion: csctl.clusterstack.x-k8s.io/v1alpha1\nconfig:\n  kubernetesVersion: v1.27.7\n  clusterStackName: ferrol\n  provider:\n    type: <myprovider>\n    apiVersion: <myprovider>.csctl.clusterstack.x-k8s.io/v1alpha1\n    config:\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The apiVersion specifies the version of this configuration. Currently, there is only the version ",(0,r.jsx)(t.code,{children:"csctl.clusterstack.x-k8s.io/v1alpha1"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Furthermore, the Kubernetes version in the format ",(0,r.jsx)(t.code,{children:"v<major>.<minor>.<patch>"})," (e.g. 1.27.5) has to be specified as well as the name that should be given to the Cluster Stack."]}),"\n",(0,r.jsx)(t.p,{children:"Depending on your plugin, there might be a provider-specific configuration."})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(96540);const r={},c=s.createContext(r);function o(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(c.Provider,{value:t},e.children)}}}]);