"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9285],{33685:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"scs-0124-v1-security-of-iaas-service-software","title":"Standard for the security of IaaS service software","description":"Introduction","source":"@site/standards/scs-0124-v1-security-of-iaas-service-software.md","sourceDirName":".","slug":"/scs-0124-v1-security-of-iaas-service-software","permalink":"/standards/scs-0124-v1-security-of-iaas-service-software","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Standard for the security of IaaS service software","type":"Standard","status":"Draft","track":"IaaS"},"sidebar":"standards","previous":{"title":"scs-0124: Standard for the security of IaaS service software","permalink":"/standards/iaas/scs-0124"},"next":{"title":"W1","permalink":"/standards/scs-0124-w1-security-of-iaas-service-software"}}');var n=s(74848),i=s(28453);const r={title:"Standard for the security of IaaS service software",type:"Standard",status:"Draft",track:"IaaS"},o=void 0,d={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Design Considerations",id:"design-considerations",level:2},{value:"Options considered",id:"options-considered",level:3},{value:"Only Allow the current versions of Software",id:"only-allow-the-current-versions-of-software",level:4},{value:"Allow only maintained versions of Software",id:"allow-only-maintained-versions-of-software",level:4},{value:"Standards implicitly define the minimum versions of Software",id:"standards-implicitly-define-the-minimum-versions-of-software",level:4},{value:"Advise CSPs to integrate software updates",id:"advise-csps-to-integrate-software-updates",level:4},{value:"Dependencies of the IaaS Layer Software",id:"dependencies-of-the-iaas-layer-software",level:4},{value:"What timeframe is needed to fix the issue?",id:"what-timeframe-is-needed-to-fix-the-issue",level:4},{value:"Standard for a minimum IaaS Layer Software version",id:"standard-for-a-minimum-iaas-layer-software-version",level:2},{value:"Conformance Tests",id:"conformance-tests",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",section:"section",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(t.p,{children:"Software security relies on bug patches and security updates being available for specific versions of the software.\nThe services, which build the IaaS Layer should be updated on a regular basis based on updates provided by their respective authors or distributors.\nBut older releases or versions of the software of these services may not receive updates anymore.\nUnpatched versions should not be used in deployments as they are a security risk, so this standard will define how CSPs should deal with software versions and security updates."}),"\n",(0,n.jsx)(t.h2,{id:"terminology",children:"Terminology"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Term"}),(0,n.jsx)(t.th,{children:"Explanation"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"CSP"}),(0,n.jsx)(t.td,{children:"Cloud Service Provider, provider managing the OpenStack infrastructure."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"SLURP"}),(0,n.jsx)(t.td,{children:"Skip Level Upgrade Release Process - A Process that allows upgrades between two releases, while skipping the one in between them."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"OSSN"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.a,{href:"https://wiki.openstack.org/wiki/Security_Notes",children:"OpenStack Security Note"})," - security issues from 3rd parties or due to misconfigurations."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"OSSA"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.a,{href:"https://security.openstack.org/ossalist.html",children:"OpenStack Security Advisories"})," - security issues and advices for OpenStack."]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,n.jsx)(t.p,{children:"On the IaaS Layer the software, that needs to be considered in the scope of this standard, is mainly the APIs of IaaS Services.\nAlso there might be shared libraries and other dependencies, that could be considered part of the IaaS Layer.\nIn software projects like e.g. OpenStack that provide the main services and all APIs, the software will be modified and receive bug fixes continuously and will receive releases of new versions on a regular basis.\nOlder releases will at some point not receive updates anymore, because maintaining more and more releases simultaneously requires too much manpower.\nThus older versions will also eventually not receive security updates anymore.\nUsing versions which do not receive updates anymore threatens the baseline security of deployments and should be avoided under all circumstances."}),"\n",(0,n.jsx)(t.h2,{id:"design-considerations",children:"Design Considerations"}),"\n",(0,n.jsx)(t.p,{children:"It would be possible to define a minimum version of IaaS Layer software to avoid security risks.\nIn the following paragraphs several options of defining a minimum version or dealing with security patches otherwise are discussed."}),"\n",(0,n.jsx)(t.h3,{id:"options-considered",children:"Options considered"}),"\n",(0,n.jsx)(t.h4,{id:"only-allow-the-current-versions-of-software",children:"Only Allow the current versions of Software"}),"\n",(0,n.jsx)(t.p,{children:"Considering that OpenStack as one provider of IaaS Layer Software has two releases per year, with one SLURP release per year, this option would require CSPs to update their deployment once or twice a year.\nUpdating a whole deployment is a lot of work and requires also good life-cycle management.\nFollowing only the SLURP releases would reduce this work to once per year."}),"\n",(0,n.jsx)(t.p,{children:"While following new releases closely already provides a deployment with recent bug fixes and new features, it also makes developing standards easier.\nDifferences between releases will accumulate eventually and may render older releases non-compliant to the SCS standards at some point."}),"\n",(0,n.jsxs)(t.p,{children:["On the other hand on the IaaS Level there aren't many breaking changes introduced by releases and also most standards will also work with older releases.\nSecurity updates and bug fixes are also provided by OpenStack for a few older releases with the state ",(0,n.jsx)(t.code,{children:"maintained"})," according to the OpenStack releases overview",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),".\nAdditionally the ",(0,n.jsx)(t.a,{href:"https://github.com/SovereignCloudStack/release-notes/blob/main/Release7.md",children:"SCS reference implementation"})," is integrating OpenStack releases after half a year - so about the time when a new release is published by OpenStack.\nConsidering a CSP that wants to use only SLURP releases and waits for the reference implementation to adopt them, will already lag over a year (i.e. 2 OpenStack releases) behind the latest release, this cannot be considered as using the current version of IaaS Layer Software.\nThus this option can be discarded."]}),"\n",(0,n.jsx)(t.h4,{id:"allow-only-maintained-versions-of-software",children:"Allow only maintained versions of Software"}),"\n",(0,n.jsxs)(t.p,{children:["While following closely to the newest releases could be advised, there are several downsides to requiring this workflow, even if it would be only for SLURP releases.\nFollowing the SCS reference implementation for example would also lead into being a little bit behind the newest OpenStack release.\nBut this is not as bad as it may seem to be, because security related fixes and bug fixes are backported to older but still ",(0,n.jsx)(t.code,{children:"maintained"})," releases.\nAll releases that are still maintained can be looked up at the releases page from OpenStack",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-2",id:"user-content-fnref-2-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Allowing maintained versions would give CSPs a little bit more time to update and test their environments, while still receiving relevant security updates and bug fixes.\nAlso CSPs that want to become SCS-compliant will not have to take on the burden to upgrade their deployments to very recent releases immediately, but can instead test with an existing release before an upgrade and identify where they need to put in additional work to become SCS-compliant."}),"\n",(0,n.jsx)(t.p,{children:"One problem is, that there might be new features implemented in the newest versions of the software, which are desired by other SCS standards to be SCS-compliant.\nIn that case allowing all maintained versions would lead to a two-year timespan customers would need to wait for before such a feature becomes available in all SCS-compliant deployments.\nIn case of security relevant features this is not advisable."}),"\n",(0,n.jsx)(t.h4,{id:"standards-implicitly-define-the-minimum-versions-of-software",children:"Standards implicitly define the minimum versions of Software"}),"\n",(0,n.jsx)(t.p,{children:"Instead of requiring a defined minimum software version centrally, it could be derived from the individual standards.\nBecause: Whenever there is a new wanted behavior a standard should be created and a resonable timeframe given to CSPs to adopt a software version that can fulfill the new standard.\nThrough the combination of all standards that are in place, the minimum version for the IaaS service software is implicitly given."}),"\n",(0,n.jsx)(t.p,{children:"This would avoid to have conflicting versions of software in terms of feature parity, while also allowing older software.\nUsing this approach requires an additional advise to CSPs to update or implement patches for security issues."}),"\n",(0,n.jsx)(t.h4,{id:"advise-csps-to-integrate-software-updates",children:"Advise CSPs to integrate software updates"}),"\n",(0,n.jsx)(t.p,{children:"As long as maintained versions of software are used, updates with security patches are available and only need to be integrated.\nThis can and should be done in a reasonable short timeframe."}),"\n",(0,n.jsx)(t.p,{children:"But CSPs may even use releases of IaaS software, that are either not maintained anymore by an open source community or may be even closed source implementations of the mandatory IaaS APIs.\nAllowing older versions or closed source software would only be acceptable, when CSPs assure (e.g. in documentation), that they themself will patch the software within their deployments.\nSecurity bug fixes must be implemented and proof of the fix then provided.\nOnly under these circumstances deployments with older or alternative IaaS Layer software may be handled as compliant."}),"\n",(0,n.jsx)(t.p,{children:"This option could be taken for granted, but to actually advise using it may encourage CSPs to take a closer look on their life-cycle management and security risk handling.\nAnd CSPs using OpenStack could even be encouraged to upgrade their deployments."}),"\n",(0,n.jsx)(t.h4,{id:"dependencies-of-the-iaas-layer-software",children:"Dependencies of the IaaS Layer Software"}),"\n",(0,n.jsx)(t.p,{children:"While the IaaS service software like OpenStack itself is monitored and security issues announced in OSSNs and OSSAs, these services have lots of dependecies, that are not monitored by the same entity.\nWhen dependencies have security issues, there might be no OSSN or OSSA, so CSPs also need to watch CVEs concerning these dependencies themselves.\nThose dependencies must also be updated in a reasonable timeframe, when a security issue is disclosed."}),"\n",(0,n.jsx)(t.h4,{id:"what-timeframe-is-needed-to-fix-the-issue",children:"What timeframe is needed to fix the issue?"}),"\n",(0,n.jsx)(t.p,{children:"CSPs should be encouraged to fix security issues as fast as possible.\nSome security issues are very easy to exploit so as soon as the vulnerability is disclosed attacks on deployments will start.\nOther vulnerabilities may need much knowledge and more time to be exploited.\nAlso the impact of different vulnerabilities will differ."}),"\n",(0,n.jsxs)(t.p,{children:["So it can be concluded that some security issues need to be fixed immediately while for others it is okay to take some time.\nThe BSI already has some guidance",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})," on how fast CSPs should respond.\nFrom the moment a vulnerability is disclosed these are the advised reaction times ranked by the severity of the vulnerability:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Critical (CVSS = 9.0 \u2013 10.0): 3 hours"}),"\n",(0,n.jsx)(t.li,{children:"High (CVSS = 7.0 \u2013 8.9): 3 days"}),"\n",(0,n.jsx)(t.li,{children:"Mid (CVSS = 4.0 \u2013 6.9): 1 month"}),"\n",(0,n.jsx)(t.li,{children:"Low (CVSS = 0.1 \u2013 3.9): 3 months"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:'This standard will follow this guidance and refer to these timeframes as "reasonable timeframes".'}),"\n",(0,n.jsx)(t.h2,{id:"standard-for-a-minimum-iaas-layer-software-version",children:"Standard for a minimum IaaS Layer Software version"}),"\n",(0,n.jsxs)(t.p,{children:["If a deployment is affected by a security issue and a maintained",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-2",id:"user-content-fnref-2-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," version of OpenStack is used as implementation for IaaS Layer software, security patches noted in OSSNs and OSSAs MUST be integrated within a reasonable timeframe according to the severity of the security issue",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-1",id:"user-content-fnref-1-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),".\nOtherwise the CSP MUST implement security bug fixes themself within a reasonable timeframe, when the deplyoment is affected by a security issue according to the severity of the security issue",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-1",id:"user-content-fnref-1-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:"In both cases a notice of the update MUST be send to the OSBA, so that the compliance will not be revoked."}),"\n",(0,n.jsxs)(t.p,{children:["If a deployment uses a dependency of the IaaS service software which is affected by a security issue, this software also MUST be updated with security patches within a reasonable timeframe",(0,n.jsx)(t.sup,{children:(0,n.jsx)(t.a,{href:"#user-content-fn-1",id:"user-content-fnref-1-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),"."]}),"\n",(0,n.jsx)(t.p,{children:"An open SBOM list MAY be used to propagate the current version of the software and may be used as proof of updates."}),"\n",(0,n.jsx)(t.h2,{id:"conformance-tests",children:"Conformance Tests"}),"\n",(0,n.jsx)(t.p,{children:"In case of provided SBOMs the version numbers of the software could be checked.\nBut this is not a requirement, so there cannot be such a test.\nTests on the integration of security patches itself are difficult.\nAnd even if tests for certain security issues are possible, then those might be interpreted as an attack.\nThis is the reason there will be no conformance test."}),"\n",(0,n.jsx)(t.p,{children:"Rather the standard requires that CSPs provide notice of the fixed vulnerabilites themselves."}),"\n","\n",(0,n.jsxs)(t.section,{"data-footnotes":!0,className:"footnotes",children:[(0,n.jsx)(t.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{id:"user-content-fn-2",children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://releases.openstack.org",children:"OpenStack versions and their current status"})," ",(0,n.jsx)(t.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})," ",(0,n.jsxs)(t.a,{href:"#user-content-fnref-2-2","data-footnote-backref":"","aria-label":"Back to reference 1-2",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(t.sup,{children:"2"})]})," ",(0,n.jsxs)(t.a,{href:"#user-content-fnref-2-3","data-footnote-backref":"","aria-label":"Back to reference 1-3",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(t.sup,{children:"3"})]})]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{id:"user-content-fn-1",children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/CloudComputing/ComplianceControlsCatalogue/2020/C5_2020.pdf?__blob=publicationFile&v=3",children:"C5 criteria catalog with timeframes for responses on page 70."})," ",(0,n.jsx)(t.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})," ",(0,n.jsxs)(t.a,{href:"#user-content-fnref-1-2","data-footnote-backref":"","aria-label":"Back to reference 2-2",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(t.sup,{children:"2"})]})," ",(0,n.jsxs)(t.a,{href:"#user-content-fnref-1-3","data-footnote-backref":"","aria-label":"Back to reference 2-3",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(t.sup,{children:"3"})]})," ",(0,n.jsxs)(t.a,{href:"#user-content-fnref-1-4","data-footnote-backref":"","aria-label":"Back to reference 2-4",className:"data-footnote-backref",children:["\u21a9",(0,n.jsx)(t.sup,{children:"4"})]})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var a=s(96540);const n={},i=a.createContext(n);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);