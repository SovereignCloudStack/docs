"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[59495],{25367:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"iaas/guides/configuration-guide/loadbalancer","title":"Loadbalancer","description":"The settings of the following section rely on the mechanisms of Kolla-Ansible,","source":"@site/docs/02-iaas/guides/configuration-guide/loadbalancer.md","sourceDirName":"02-iaas/guides/configuration-guide","slug":"/iaas/guides/configuration-guide/loadbalancer","permalink":"/docs/iaas/guides/configuration-guide/loadbalancer","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/02-iaas/guides/configuration-guide/loadbalancer.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"Loadbalancer","sidebar_position":20},"sidebar":"docs","previous":{"title":"Proxy","permalink":"/docs/iaas/guides/configuration-guide/proxy"},"next":{"title":"Ceph","permalink":"/docs/iaas/guides/configuration-guide/ceph/"}}');var a=i(74848),s=i(28453);const l={sidebar_label:"Loadbalancer",sidebar_position:20},r="Loadbalancer",o={},c=[{value:"IP addresses &amp; FQDNs",id:"ip-addresses--fqdns",level:2},{value:"TLS certificates",id:"tls-certificates",level:2},{value:"General procedure",id:"general-procedure",level:2},{value:"Self-signed certificates",id:"self-signed-certificates",level:3},{value:"Generating TLS certificates with Let\u2019s Encrypt",id:"generating-tls-certificates-with-lets-encrypt",level:3},{value:"Second Loadbalancer",id:"second-loadbalancer",level:2},{value:"ProxySQL",id:"proxysql",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"loadbalancer",children:"Loadbalancer"})}),"\n",(0,a.jsxs)(n.p,{children:["The settings of the following section rely on the mechanisms of Kolla-Ansible,\ntherefore it's a good idea to consult the ",(0,a.jsx)(n.a,{href:"https://docs.openstack.org/kolla-ansible/latest/admin/tls.html",children:"upstream documentation"}),"\nfor finding out details which are not covered by this documentation."]}),"\n",(0,a.jsx)(n.h2,{id:"ip-addresses--fqdns",children:"IP addresses & FQDNs"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla/configuration.yml"',children:"kolla_internal_vip_address: 192.168.16.9\nkolla_external_vip_address: 192.168.16.254\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla/configuration.yml"',children:"kolla_internal_fqdn: api-int.testbed.osism.xyz\nkolla_external_fqdn: api.testbed.osism.xyz\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/configuration.yml"',children:"hosts_additional_entries:\n  api-int.testbed.osism.xyz: 192.168.16.9\n  api.testbed.osism.xyz: 192.168.16.254\n"})}),"\n",(0,a.jsx)(n.h2,{id:"tls-certificates",children:"TLS certificates"}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"To avoid unnecessary additional work and debugging, it is recommended that you configure TLS with the intended target\nconfiguration of the specific environment before executing the initial rollout procedures."})}),"\n",(0,a.jsx)(n.p,{children:"Changes to the configuration of TLS (i.e. enable or disable) or fully qualified domain names (FQDNs) will\nresult in new URLs (with and without the https prefix).\nThese addresses are often stored in the Openstack database on initial deployment and cannot\nbe updated by simply modifying the configuration repository and performing an additional rollout."}),"\n",(0,a.jsx)(n.p,{children:"In the case of self-signed certificates, the CA certificate must be distributed to all participating\nhttps clients in the correct dependency order and in a manner appropriate to the associated Openstack service."}),"\n",(0,a.jsx)(n.p,{children:"As a result, at a minimum, the involved Ansible Plays must be run in the appropriate order, and not all Ansible Plays\nare designed to to handle all possible configuration transitions on their own."}),"\n",(0,a.jsx)(n.h2,{id:"general-procedure",children:"General procedure"}),"\n",(0,a.jsx)(n.p,{children:"To enable TLS encryption the following steps are needed."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Activate tls encryption for both endpoints"}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"To enable external TLS encryption:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla/configuration.yml"',children:'kolla_enable_tls_external: "yes"\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"To enable internal TLS encryption:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla/configuration.yml"',children:'kolla_enable_tls_internal: "yes"\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Add the combined server certificate and private key to the following locations in the configuration repository:"}),"\n"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["private key & certificates for ",(0,a.jsx)(n.code,{children:"kolla_external_fqdn"}),": ",(0,a.jsx)(n.code,{children:"environments/kolla/certificates/haproxy.pem"})]}),"\n",(0,a.jsxs)(n.li,{children:["private key & certificates for ",(0,a.jsx)(n.code,{children:"kolla_internal_fqdn"}),": ",(0,a.jsx)(n.code,{children:"environments/kolla/certificates/haproxy-internal.pem"})]}),"\n"]}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsxs)(n.li,{children:["Encrypt the certificates using ansible vault:","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"make ansible_vault_edit FILE=environments/kolla/certificates/haproxy.pem\nmake ansible_vault_edit FILE=environments/kolla/certificates/haproxy-internal.pem\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Add the changes to the Git repository","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'git add environments/kolla/certificates/haproxy.pem \\\n  environments/kolla/certificates/haproxy-internal.pem \\\n  environments/kolla/configuration.yml\n\ngit commit -m "Add new certificates" environments/kolla/certificates/haproxy.pem \\\n  environments/kolla/certificates/haproxy-internal.pem \\\n  environments/kolla/configuration.yml\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Rollout changes","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism apply loadbalancer\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"self-signed-certificates",children:"Self-signed certificates"}),"\n",(0,a.jsx)(n.p,{children:"OSISM supports the usage of self-signed certificates with a custom CA i.e if you\nare running a test installation or for interim purposes."}),"\n",(0,a.jsx)(n.p,{children:"Two certificate files are required to use TLS securely with authentication,\nwhich will be provided by your custom Certificate Authority:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"the server certificate with private key"}),"\n",(0,a.jsx)(n.li,{children:"the CA certificate with any intermediate certificates"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The following procedure describes the preparation tasks for the CA, which is later followed\nby the ",(0,a.jsx)(n.a,{href:"#general-procedure",children:"general procedure"})," described above."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Import custom CA"}),"\n",(0,a.jsxs)(n.p,{children:["Any custom CA can be added via the ",(0,a.jsx)(n.code,{children:"certificates_ca"})," parameter.\nThis is already done in the bootstrap of the nodes."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/configuration.yml"',children:"certificates_ca:\n  - name: custom.crt\n    certificate: |\n      -----BEGIN CERTIFICATE-----\n      [...]\n      -----END CERTIFICATE-----\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Manager service"}),"\n",(0,a.jsxs)(n.p,{children:["The local environment variable ",(0,a.jsx)(n.code,{children:"REQUESTS_CA_BUNDLE"})," must be set explicitly so that\nthe manager service knows the custom CA in all necessary places."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/manager/configuration.yml"',children:"manager_environment_extra:\n  REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Use in OpenStack"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Add the custom CA to the configuration repository in the directory ",(0,a.jsx)(n.code,{children:"environments/kolla/certificates/ca"})," with the same\nname like in step 1"]}),"\n",(0,a.jsxs)(n.li,{children:["Configure the custom CA to be copied to the OpenStack containers","\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/manager/configuration.yml"',children:'kolla_copy_ca_into_containers: "yes"\nopenstack_cacert: /etc/ssl/certs/ca-certificates.crt\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Import the ca certificate to all nodes so that the custom CA is known everywhere and the self-signed certificates are accepted as valid."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism apply certificates\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Execute all steps in the ",(0,a.jsx)(n.a,{href:"#general-procedure",children:"general procedure"})," above"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"generating-tls-certificates-with-lets-encrypt",children:"Generating TLS certificates with Let\u2019s Encrypt"}),"\n",(0,a.jsx)(n.p,{children:"Using Let's encrypt certificates is a good alternative to traditional certificate authorities and\ngreatly simplifies the administration of TLS certificates."}),"\n",(0,a.jsxs)(n.p,{children:["For a working Let's Encrypt configuration, the API endpoints (configured by ",(0,a.jsx)(n.code,{children:"kolla_internal_fqdn"})," and ",(0,a.jsx)(n.code,{children:"kolla_external_fqdn"}),")\nmust be accessible from the internet."]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Activate Let's Encrypt tls encryption for both endpoints"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla/configuration.yml"',children:'enable_letsencrypt: "yes"\nletsencrypt_email: "<The email used for registration and recovery contact>"\nkolla_enable_tls_external: "yes"\nkolla_enable_tls_internal: "yes"\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Rollout changes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism apply loadbalancer\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["For more details about this topic, we recommend the ",(0,a.jsx)(n.a,{href:"https://docs.openstack.org/kolla-ansible/latest/admin/tls.html#generating-tls-certificates-with-let-s-encrypt",children:"offical kolla-ansible documentation"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"second-loadbalancer",children:"Second Loadbalancer"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"This feature is available from OSISM 7.0.5."})}),"\n",(0,a.jsxs)(n.p,{children:["With OSISM, it is possible to manage any number of independent loadbalancers via a single OSISM\nmanager service using sub-environments. A sub environment is basically nothing more than another directory\nbelow the ",(0,a.jsx)(n.code,{children:"environments"})," directory of the configuration repository with a special name."]}),"\n",(0,a.jsxs)(n.p,{children:["A sub-environment for an additional loadbalancer always has the name ",(0,a.jsx)(n.code,{children:"kolla.NAME"})," as the loadbalancer\nis provided as part of Kolla. The ",(0,a.jsx)(n.code,{children:"kolla.NAME"})," directory in the configuration repository then contains\nthe ",(0,a.jsx)(n.code,{children:"configuration.yml"}),", ",(0,a.jsx)(n.code,{children:"images.yml"})," and ",(0,a.jsx)(n.code,{children:"secrets.yml"})," files as usual."]}),"\n",(0,a.jsx)(n.p,{children:"The following directories and files are also required in a sub-environment for a loadbalancer."}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{style:{textAlign:"left"},children:"File"}),(0,a.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{style:{textAlign:"left"},children:(0,a.jsx)(n.code,{children:"certificates/ca/custom.crt"})}),(0,a.jsx)(n.td,{style:{textAlign:"left"},children:"The file is optional. If a custom CA is used, it must be added here."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{style:{textAlign:"left"},children:(0,a.jsx)(n.code,{children:"certificates/haproxy-internal.pem"})}),(0,a.jsx)(n.td,{style:{textAlign:"left"},children:"SSL certificate to be used."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{style:{textAlign:"left"},children:(0,a.jsx)(n.code,{children:"files/overlays/haproxy/services.d/haproxy.cfg"})}),(0,a.jsx)(n.td,{style:{textAlign:"left"},children:"HAProxy configuration to be used on the loadbalancer."})]})]})]}),"\n",(0,a.jsxs)(n.p,{children:["In this example, a sub-environment ",(0,a.jsx)(n.code,{children:"kolla.external"})," is created, which is used for an outward facing\nloadbalancer that only offers certain API services."]}),"\n",(0,a.jsxs)(n.p,{children:["In comparison to the normal ",(0,a.jsx)(n.code,{children:"kolla"})," environment, the groups to be used must be overwritten for a\nKolla sub-environment. In this case, one group is defined: ",(0,a.jsx)(n.code,{children:"kolla.external.loadbalancer"}),". It is\nrecommended to base the name of the groups on the name of the sub-environments."]}),"\n",(0,a.jsxs)(n.p,{children:["The group ",(0,a.jsx)(n.code,{children:"kolla.external.loadbalancer"})," is added to the global inventory in the ",(0,a.jsx)(n.code,{children:"10-custom"})," file.\nIn this example, ",(0,a.jsx)(n.code,{children:"testbed-node-2.testbed.osism.xyz"})," is used for the second loadbalancer."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",metastring:'title="inventory/10-custom"',children:"[kolla.external.loadbalancer]\ntestbed-node-2.testbed.osism.xyz\n"})}),"\n",(0,a.jsxs)(n.p,{children:["It is also important to ensure that the nodes used for the second loadbalancer are not included in\nthe ",(0,a.jsx)(n.code,{children:"loadbalancer"})," group. This can be checked with ",(0,a.jsx)(n.code,{children:"osism get hosts -l loadbalancer"}),". If the nodes of\nthe second loadbalancer are also listed there, the ",(0,a.jsx)(n.code,{children:"loadbalancer"})," group in the ",(0,a.jsx)(n.code,{children:"99-overwrite"})," file of\nthe global inventory must be overwritten. In this example, the ",(0,a.jsx)(n.code,{children:"loadbalaner"})," group is overwritten so\nthat only ",(0,a.jsx)(n.code,{children:"testbed-node-0.testbed.osism.xyz"})," and ",(0,a.jsx)(n.code,{children:"testbed-node-1.testbed.osism.xyz"})," are left in the\n",(0,a.jsx)(n.code,{children:"loadbalancer"})," group."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",metastring:'title="inventory/99-overwrite"',children:"[loadbalancer]\ntestbed-node-0.testbed.osism.xyz\ntestbed-node-1.testbed.osism.xyz\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Furthermore, in a Kolla sub-environment that is only used for a loadbalancer, only a few additional\nparameters are required in the ",(0,a.jsx)(n.code,{children:"configuration.yml"})," file."]}),"\n",(0,a.jsxs)(n.p,{children:["Don't get confused, only the ",(0,a.jsx)(n.code,{children:"kolla_*internal*"})," parameters and the ",(0,a.jsx)(n.code,{children:"haproxy-internal.pem"})," file are used\nhere in the example. This is because we only want to configure one virtual IP address on the external\nloadbalancer and the loadbalancer managed by Kolla has the internal IP address by default. It is therefore\nnot possible with Kolla to use only the ",(0,a.jsx)(n.code,{children:"kolla_*external*"})," parameters as an additional virtual IP address\nwith default values would then be configured by default."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla.external/configuration.yml"',children:'---\n##########################################################\n# hosts\n\nhosts_kolla_all: kolla.external.loadbalancer\nhosts_kolla_loadbalancer: kolla.external.loadbalancer\n\n##########################################################\n# docker\n\ndocker_namespace: osism\n\n##########################################################\n# loadbalancer\n\nkolla_internal_vip_address: 192.168.24.200\nkolla_internal_fqdn: api.testbed.osism.com\nkolla_enable_tls_internal: "yes"\n\n# Required if a custom CA is used.\nkolla_copy_ca_into_containers: "yes"\n'})}),"\n",(0,a.jsx)(n.p,{children:"At the moment it is only possible to deploy the loadbalancer itself with its own configuration. It is currently\nnot possible to use the integrated service configurations of Kolla itself (Nova, Cinder, ..) on an additional\nloadbalancer. This will be possible in the future."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism apply --sub external loadbalancer-without-service-config\n"})}),"\n",(0,a.jsx)(n.h2,{id:"proxysql",children:"ProxySQL"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="environments/kolla/configuration.yml"',children:'enable_proxysql: "yes"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var t=i(96540);const a={},s=t.createContext(a);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);