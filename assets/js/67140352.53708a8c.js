"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[93575],{997:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"iam/domain-manager-setup-and-usage","title":"Domain Manager setup and usage","description":"The following documentation refers to a SCS standard that is still in draft state.","source":"@site/docs/05-iam/domain-manager-setup-and-usage.md","sourceDirName":"05-iam","slug":"/iam/domain-manager-setup-and-usage","permalink":"/docs/iam/domain-manager-setup-and-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/05-iam/domain-manager-setup-and-usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Guides","permalink":"/docs/category/guides-2"},"next":{"title":"Example setup configuration in SCS deployment explained","permalink":"/docs/iam/SCS-example-setup-configuration-description"}}');var o=a(74848),s=a(28453);const r={},t="Domain Manager setup and usage",d={},l=[{value:"Preface",id:"preface",level:2},{value:"Warning regarding the exposure of domain names",id:"warning-regarding-the-exposure-of-domain-names",level:3},{value:"Infrastructure configuration",id:"infrastructure-configuration",level:2},{value:"[Initial] Keystone API policy adjustments",id:"initial-keystone-api-policy-adjustments",level:3},{value:"[Initial] Keystone role creation",id:"initial-keystone-role-creation",level:3},{value:"[Runtime] Domain Manager managed roles adjustment",id:"runtime-domain-manager-managed-roles-adjustment",level:3},{value:"Administrative operation",id:"administrative-operation",level:2},{value:"Creating domains",id:"creating-domains",level:3},{value:"Creating a Domain Manager user",id:"creating-a-domain-manager-user",level:3},{value:"Assigning the Domain Manager role to an existing user",id:"assigning-the-domain-manager-role-to-an-existing-user",level:3},{value:"Revoking the Domain Manager role",id:"revoking-the-domain-manager-role",level:3},{value:"Domain Manager operation",id:"domain-manager-operation",level:2},{value:"Managing users within a domain",id:"managing-users-within-a-domain",level:3},{value:"Managing projects within a domain",id:"managing-projects-within-a-domain",level:3},{value:"Deleting projects",id:"deleting-projects",level:4},{value:"Managing groups within a domain",id:"managing-groups-within-a-domain",level:3},{value:"Managing group membership",id:"managing-group-membership",level:4},{value:"Managing role assignments within a domain",id:"managing-role-assignments-within-a-domain",level:3},{value:"Managing user role assignments",id:"managing-user-role-assignments",level:4},{value:"Managing group role assignments",id:"managing-group-role-assignments",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"domain-manager-setup-and-usage",children:"Domain Manager setup and usage"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"The following documentation refers to a SCS standard that is still in draft state.\nIt is not meant for productive use yet but CSPs are encouraged to test-drive and provide feedback!"})}),"\n",(0,o.jsx)(n.h2,{id:"preface",children:"Preface"}),"\n",(0,o.jsxs)(n.p,{children:["SCS defines the ",(0,o.jsx)(n.strong,{children:"Domain Manager"})," standard, introducing a special persona to the OpenStack Keystone identity manager.\nThis persona offers a properly domain-scoped permission set to manage users, groups, projects and role assignments within a domain.\nIts intended use case is to offer extensive identity management self-service capabilities to tenants mapped to a domain."]}),"\n",(0,o.jsx)(n.p,{children:"This guide will explain setup, configuration and usage of the SCS Domain Manager standard."}),"\n",(0,o.jsx)(n.h3,{id:"warning-regarding-the-exposure-of-domain-names",children:"Warning regarding the exposure of domain names"}),"\n",(0,o.jsxs)(n.p,{children:["Due to architectural limitations currently existing in OpenStack Keystone, assigning the ",(0,o.jsx)(n.code,{children:"manager"})," role to users while the configuration of the SCS Domain Manager standard has been applied will ",(0,o.jsx)(n.strong,{children:"enable them to see the IDs and names of all existing domains"}),".\nThis includes domains other than their own, meaning that other tenant's identities might be exposed depending on the relation between them and the name of their domain.\nCSPs aiming to appoint Domain Manager users must be aware of this limitation and should exclusively ",(0,o.jsx)(n.strong,{children:"use pseudonymized domain names across the whole infrastructure"}),".\nIf CSPs strictly follow the ",(0,o.jsx)(n.a,{href:"https://github.com/SovereignCloudStack/standards/blob/main/Standards/scs-0301-v1-naming-conventions.md",children:"SCS naming conventions"})," for domains this is already addressed.\nIf this is not feasible for the CSP, they may opt to refrain from making use of the Domain Manager functionality at all, i.e. never assign the ",(0,o.jsx)(n.code,{children:"manager"})," role to tenant users."]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"This architectural limitation will be fixed in upcoming OpenStack and SCS releases."}),(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://bugs.launchpad.net/keystone/+bug/2041611",children:"https://bugs.launchpad.net/keystone/+bug/2041611"})]})]}),"\n",(0,o.jsx)(n.h2,{id:"infrastructure-configuration",children:"Infrastructure configuration"}),"\n",(0,o.jsxs)(n.p,{children:["An initial infrastructure configuration of the Domain Manager persona must be completed before it can be used.\nThis includes adjusting the Keystone API policy configuration and the registration of the ",(0,o.jsx)(n.code,{children:"manager"})," role."]}),"\n",(0,o.jsx)(n.p,{children:'The following sections describe the configuration to be implemented on the infrastructure-level.\nThis requires infrastructure access and OpenStack admin rights.\nFor tasks marked with "[Initial]" the described procedure only has to happen once initially.\nFor tasks marked with "[Runtime]" the described procedure may be repeated later on to make adjustments.'}),"\n",(0,o.jsx)(n.h3,{id:"initial-keystone-api-policy-adjustments",children:"[Initial] Keystone API policy adjustments"}),"\n",(0,o.jsxs)(n.p,{children:['First, incorporate the Keystone API policy definitions as described in the SCS Domain Manager standard.\nThis is usually done in "',(0,o.jsx)(n.code,{children:"/etc/keystone/policy.yaml"}),'" of the Keystone API service.\nOtherwise, an entry called "',(0,o.jsx)(n.code,{children:"policy_file"}),'" under the "',(0,o.jsx)(n.code,{children:"[oslo_policy]"}),'" section of "',(0,o.jsx)(n.code,{children:"/etc/keystone/keystone.conf"}),'" might exist that points to a different policy file path.\nIn such case, adjust or create the file at the specified path.']}),"\n",(0,o.jsxs)(n.p,{children:['When incorporating the policy definitions from the standard make sure to properly merge it with existing policy definitions, if any exist.\nAlso choose the definition of manageable roles in the "',(0,o.jsx)(n.code,{children:"is_domain_managed_role"}),'" rule of the policy carefully according to your requirements and environment.\nSee the standard for more details on this rule.']}),"\n",(0,o.jsx)(n.p,{children:"Depending on the deployment method used, the adjustments may also need to be persisted in the corresponding infrastructure management solution, such as Ansible."}),"\n",(0,o.jsx)(n.h3,{id:"initial-keystone-role-creation",children:"[Initial] Keystone role creation"}),"\n",(0,o.jsxs)(n.p,{children:["The role ",(0,o.jsx)(n.code,{children:"manager"})," has to exist in Keystone.\nIf the role does not exist, it needs to be created in Keystone once.\nThis can be done with the OpenStackClient using the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role create manager\n"})}),"\n",(0,o.jsx)(n.h3,{id:"runtime-domain-manager-managed-roles-adjustment",children:"[Runtime] Domain Manager managed roles adjustment"}),"\n",(0,o.jsxs)(n.p,{children:['The list of roles that a Domain Manager can assign within a domain is configured using the "',(0,o.jsx)(n.code,{children:"is_domain_managed_role"}),'" rule of the policy definitions.\nThe SCS Domain Manager standard allows flexibility in defining the set of roles a Domain Manager may assign and revoke within a domain and enables adjustments at runtime',(0,o.jsx)(n.sup,{children:(0,o.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"."]}),"\n",(0,o.jsxs)(n.p,{children:['The set of roles can be adjusted independently from the rest of the policy by changing only the "',(0,o.jsx)(n.code,{children:"is_domain_managed_role"}),"\" line it Keystone's API policy file.\nChanges will apply to existing and future Domain Manager users.\nThis means that changes can be implemented at runtime",(0,o.jsx)(n.sup,{children:(0,o.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The following example entry adjusts the rule to allow both ",(0,o.jsx)(n.code,{children:"member"})," and ",(0,o.jsx)(n.code,{children:"reader"})," roles to be managed by Domain Managers:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"'is_domain_managed_role': \"'member':%(target.role.name)s or 'reader':%(target.role.name)s\"\n"})}),"\n",(0,o.jsx)(n.p,{children:"Refer to the SCS Domain Manager standard for more information."}),"\n",(0,o.jsx)(n.h2,{id:"administrative-operation",children:"Administrative operation"}),"\n",(0,o.jsxs)(n.p,{children:["The following sections describe actions available to CSP operators that possess the ",(0,o.jsx)(n.code,{children:"admin"})," role."]}),"\n",(0,o.jsx)(n.h3,{id:"creating-domains",children:"Creating domains"}),"\n",(0,o.jsx)(n.admonition,{type:"caution",children:(0,o.jsxs)(n.p,{children:["It is highly recommended to use pseudonymized domain names when creating domains, since Domain Managers will currently be able to see the names of all existing domains.\nSee ",(0,o.jsx)(n.a,{href:"#warning-regarding-the-exposure-of-domain-names",children:"Warning regarding the exposure of domain names"})," for more details."]})}),"\n",(0,o.jsx)(n.p,{children:"For each tenant for which a self-service area (i.e. a domain) is to be established, a domain should be created before creating any users, projects or groups for this tenant:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack domain create $DOMAIN\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Any creation of users, projects or group for a tenant should happen strictly within the tenant's domain by passing the \"",(0,o.jsx)(n.code,{children:"--domain"}),'" flag to the corresponding creation commands, regardless of whether the commands are executed by an administrator or a Domain Manager.\nSee the ',(0,o.jsx)(n.a,{href:"#domain-manager-operation",children:"Domain Manager operation"})," section further down for reference."]}),"\n",(0,o.jsx)(n.h3,{id:"creating-a-domain-manager-user",children:"Creating a Domain Manager user"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Creating the first Domain Manager users for a domain is an action reserved for CSP administrators.\nDepending on whether the ",(0,o.jsx)(n.code,{children:"manager"})," role has been approved as a domain-managed role in the policy configuration by the CSP, Domain Manager users may be able to appoint further Domain Managers within the domain on their own later on."]})}),"\n",(0,o.jsxs)(n.p,{children:["First, create the user for the Domain Manager.\nYou may create the Domain Manager user either directly in the target tenant's domain or in a different domain.\nThe domain a Domain Manager will effectively be able to manage solely depends on where its role assignment of the ",(0,o.jsx)(n.code,{children:"manager"})," role is scoped, not the domain the Domain Manager user was originally created in."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack user create --domain $MANAGER_DOMAIN $USER_NAME\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"$MANAGER_DOMAIN"})," can be the same as the tenant domain ",(0,o.jsx)(n.code,{children:"$DOMAIN"})," or an entirely different one, depending on the desired origin domain of the user.\nIn the following sections ",(0,o.jsx)(n.code,{children:"$DOMAIN"})," will denote the tenant domain that the user is intended to manage as the Domain Manager persona."]})}),"\n",(0,o.jsxs)(n.p,{children:["Next, assign the ",(0,o.jsx)(n.code,{children:"manager"})," role in a domain-scoped fashion to the tenant domain:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role add --user $USER_NAME --domain $DOMAIN manager\n"})}),"\n",(0,o.jsx)(n.h3,{id:"assigning-the-domain-manager-role-to-an-existing-user",children:"Assigning the Domain Manager role to an existing user"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role add --user $USER_NAME --domain $DOMAIN manager\n"})}),"\n",(0,o.jsx)(n.h3,{id:"revoking-the-domain-manager-role",children:"Revoking the Domain Manager role"}),"\n",(0,o.jsxs)(n.p,{children:["In case the ",(0,o.jsx)(n.code,{children:"manager"})," role is to be revoked from an existing Domain Manager user, the following command can be used:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role remove --user $USER_NAME --domain $DOMAIN manager\n"})}),"\n",(0,o.jsx)(n.h2,{id:"domain-manager-operation",children:"Domain Manager operation"}),"\n",(0,o.jsxs)(n.p,{children:["The following sections describe actions available to Domain Managers that possess the ",(0,o.jsx)(n.code,{children:"manager"})," role."]}),"\n",(0,o.jsx)(n.h3,{id:"managing-users-within-a-domain",children:"Managing users within a domain"}),"\n",(0,o.jsx)(n.p,{children:"Creating a user within a domain:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack user create --domain $DOMAIN $USER_NAME\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:['The explicit domain-scoping is only required for the creation command, any other user-centric commands like "',(0,o.jsx)(n.code,{children:"user set"}),'" or "',(0,o.jsx)(n.code,{children:"user delete"}),'" do not require the "',(0,o.jsx)(n.code,{children:"--domain"}),'" flag and are automatically scoped to the domain for Domain Managers.']})}),"\n",(0,o.jsx)(n.h3,{id:"managing-projects-within-a-domain",children:"Managing projects within a domain"}),"\n",(0,o.jsx)(n.p,{children:"Creating a project within a domain:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack project create --domain $DOMAIN $PROJECT_NAME\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:['The explicit domain-scoping is only required for the creation command, any other project-centric commands like "',(0,o.jsx)(n.code,{children:"project set"}),'" or "',(0,o.jsx)(n.code,{children:"project delete"}),'" do not require the "',(0,o.jsx)(n.code,{children:"--domain"}),'" flag and are automatically scoped to the domain for Domain Managers.']})}),"\n",(0,o.jsx)(n.h4,{id:"deleting-projects",children:"Deleting projects"}),"\n",(0,o.jsx)(n.p,{children:"Note that before deleting projects, make sure that all cloud resources (servers, volumes etc.) belonging to that project have been removed beforehand.\nOtherwise such resources might become orphaned and inaccessible without involving the CSP."}),"\n",(0,o.jsx)(n.h3,{id:"managing-groups-within-a-domain",children:"Managing groups within a domain"}),"\n",(0,o.jsx)(n.p,{children:"Creating a group within a domain:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack group create --domain $DOMAIN $GROUP_NAME\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:['The explicit domain-scoping is only required for the creation command, any other group-centric commands like "',(0,o.jsx)(n.code,{children:"group set"}),'" or "',(0,o.jsx)(n.code,{children:"group delete"}),'" do not require the "',(0,o.jsx)(n.code,{children:"--domain"}),'" flag and are automatically scoped to the domain for Domain Managers.']})}),"\n",(0,o.jsx)(n.h4,{id:"managing-group-membership",children:"Managing group membership"}),"\n",(0,o.jsx)(n.p,{children:"Adding a user to a group:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack group add user $GROUP $USER\n"})}),"\n",(0,o.jsx)(n.p,{children:"Removing a user from a group:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack group remove user $GROUP $USER\n"})}),"\n",(0,o.jsx)(n.h3,{id:"managing-role-assignments-within-a-domain",children:"Managing role assignments within a domain"}),"\n",(0,o.jsxs)(n.p,{children:["Role assignments managed by a Domain Manager work as usual with the exception that the roles that can be assigned and revoked are limited to a defined set which is explicitly approved for Domain Managers by the CSP.\nThis may or may not include the ",(0,o.jsx)(n.code,{children:"manager"})," role itself, meaning that Domain Managers may either be able to appoint other Domain Managers by themselves or have to ask the CSP to do so."]}),"\n",(0,o.jsx)(n.h4,{id:"managing-user-role-assignments",children:"Managing user role assignments"}),"\n",(0,o.jsx)(n.p,{children:"Assigning a role to a user within a project:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role add --project $PROJECT --user $USER $ROLE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Assigning a role to a user domain-wide:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role add --domain $DOMAIN --user $USER $ROLE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Revoking a project-level role assignment from a user:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role remove --project $PROJECT --user $USER $ROLE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Revoking a domain-wide role assignment from a user:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role remove --domain $DOMAIN --user $USER $ROLE\n"})}),"\n",(0,o.jsx)(n.h4,{id:"managing-group-role-assignments",children:"Managing group role assignments"}),"\n",(0,o.jsx)(n.p,{children:"Assigning a role to a group within a project:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role add --project $PROJECT --group $GROUP $ROLE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Assigning a role to a group domain-wide:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role add --domain $DOMAIN --group $GROUP $ROLE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Revoking a project-level role assignment from a group:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role remove --project $PROJECT --group $GROUP $ROLE\n"})}),"\n",(0,o.jsx)(n.p,{children:"Revoking a domain-wide role assignment from a group:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openstack role remove --domain $DOMAIN --group $GROUP $ROLE\n"})}),"\n","\n",(0,o.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,o.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,o.jsxs)(n.p,{children:['"at runtime" in this context means that the configuration may be changed repeatedly after the initial configuration of Keystone and take effect immediately.\nDepending on the infrastructure management solution and high-availability configuration the described adjustments may or may not require a restart of the Keystone API service or lead to a downtime of the service. ',(0,o.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})," ",(0,o.jsxs)(n.a,{href:"#user-content-fnref-1-2","data-footnote-backref":"","aria-label":"Back to reference 1-2",className:"data-footnote-backref",children:["\u21a9",(0,o.jsx)(n.sup,{children:"2"})]})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>t});var i=a(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);