"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[16218],{71307:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"application-examples/opendesk-on-scs/requirements","title":"Requirements","description":"You can find the general requirements in the openDesk documentation. Please study them before beginning. This howto only touches on requirements concerning the rollout on an SCS cluster.","source":"@site/user-docs/application-examples/opendesk-on-scs/requirements.md","sourceDirName":"application-examples/opendesk-on-scs","slug":"/application-examples/opendesk-on-scs/requirements","permalink":"/user-docs/application-examples/opendesk-on-scs/requirements","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"userDocs","previous":{"title":"Quickstart","permalink":"/user-docs/application-examples/opendesk-on-scs/quickstart"},"next":{"title":"Getting started: Deployment from a local machine","permalink":"/user-docs/application-examples/opendesk-on-scs/getting_started"}}');var r=s(74848),o=s(28453);const a={},i="Requirements",c={},l=[{value:"Preparation of your local environment",id:"preparation-of-your-local-environment",level:2},{value:"Command line tools",id:"command-line-tools",level:3},{value:"KUBECONFIG",id:"kubeconfig",level:3},{value:"Preparation of the nameserver",id:"preparation-of-the-nameserver",level:2},{value:"Preparation of the Kubernetes cluster",id:"preparation-of-the-kubernetes-cluster",level:2},{value:"Install cert-manager",id:"install-cert-manager",level:3},{value:"Deploy a certificate issuer",id:"deploy-a-certificate-issuer",level:3},{value:"Ingress Controller",id:"ingress-controller",level:3},{value:"Prometheus",id:"prometheus",level:3},{value:"Storage",id:"storage",level:3},{value:"Optional: Credentials for a mail relay",id:"optional-credentials-for-a-mail-relay",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"requirements",children:"Requirements"})}),"\n",(0,r.jsxs)(n.p,{children:["You can find the general ",(0,r.jsx)(n.a,{href:"https://gitlab.opencode.de/bmi/opendesk/deployment/opendesk/-/blob/main/docs/requirements.md",children:"requirements"})," in the openDesk documentation. Please study them before beginning. This howto only touches on requirements concerning the rollout on an SCS cluster."]}),"\n",(0,r.jsx)(n.h2,{id:"preparation-of-your-local-environment",children:"Preparation of your local environment"}),"\n",(0,r.jsx)(n.h3,{id:"command-line-tools",children:"Command line tools"}),"\n",(0,r.jsx)(n.p,{children:"You will need the following command line tools on your machine:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://kubernetes.io/de/docs/tasks/tools/install-kubectl/",children:"kubectl"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://helm.sh/",children:"helm"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://helmfile.readthedocs.io/en/latest/",children:"helmfile"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/databus23/helm-diff",children:"helmDiff"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If you run into any problems, please check the openDesk ",(0,r.jsx)(n.a,{href:"https://gitlab.opencode.de/bmi/opendesk/deployment/opendesk/-/blob/main/docs/requirements.md",children:"requirements"})," for the required software versions of these tools."]}),"\n",(0,r.jsx)(n.h3,{id:"kubeconfig",children:"KUBECONFIG"}),"\n",(0,r.jsxs)(n.p,{children:["Store the cluster access information for your SCS cluster in ",(0,r.jsx)(n.code,{children:"~/.kube/config"}),". Test the access to the cluster on your command line with a ",(0,r.jsx)(n.code,{children:"kubectl"})," command, e.g. ",(0,r.jsx)(n.code,{children:"kubectl get nodes"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"preparation-of-the-nameserver",children:"Preparation of the nameserver"}),"\n",(0,r.jsxs)(n.p,{children:["openDesk consists of a number of resources with different virtual host names and subdomains. The proposed procedure deploys openDesk on a subdomain that matches the name of the namespace you choose. You will thus get URLs like ",(0,r.jsx)(n.code,{children:"portal.dev.example.org"})," or ",(0,r.jsx)(n.code,{children:"wiki.prod.example.org"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Therefore it is recommended to create a wildcard A record for the domain in your nameserver (e.g. ",(0,r.jsx)(n.code,{children:"*.example.org"}),") and point it to your cluster's public IP address."]}),"\n",(0,r.jsx)(n.p,{children:"It is of course possible to create individual A records for all resources."}),"\n",(0,r.jsxs)(n.p,{children:["The choice of your nameserver has an impact: It is recommended to use a nameserver that gives you API access: In this howto, TLS certificates are fetched from the certification authority ",(0,r.jsx)(n.a,{href:"https://letsencrypt.org/",children:"Letsencrypt"}),". Because of the number of different services, a wildcard certificate comes in handy. Note that you can only request wildcard certificates from Letsencrypt via the ",(0,r.jsx)(n.a,{href:"https://letsencrypt.org/docs/challenge-types/",children:"dns-01 challenge"}),". To do so you need a nameserver with API access. If your nameserver does not support this, you can delegate the zone to a different nameserver and fetch an API access token from there."]}),"\n",(0,r.jsx)(n.h2,{id:"preparation-of-the-kubernetes-cluster",children:"Preparation of the Kubernetes cluster"}),"\n",(0,r.jsx)(n.h3,{id:"install-cert-manager",children:"Install cert-manager"}),"\n",(0,r.jsxs)(n.p,{children:["Install cert-manager in your cluster. It is required to include the custom resource definitions (",(0,r.jsx)(n.code,{children:"--set installCRDs=true"}),")."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo add jetstack https://charts.jetstack.io --force-update\nhelm repo update\nhelm upgrade -i cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"deploy-a-certificate-issuer",children:"Deploy a certificate issuer"}),"\n",(0,r.jsxs)(n.p,{children:["The openDesk helmfiles are based on the assumption that you - as the cluster admin - take care of a certificate issuer that can just be used then. For Letsencrypt's ACME dns-01 challenge add a ",(0,r.jsx)(n.a,{href:"https://cert-manager.io/docs/concepts/issuer/",children:"cluster issuer"})," by defining it in a file, e.g. ",(0,r.jsx)(n.code,{children:"clusterIssuer.yaml"})," and applying it to the cluster. Check the documentation for your respective DNS provider to put together the relevant configuration details."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-dns-provider\ndata:\n  secret-access-key: my-generated-access-token\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-staging\nspec:\n  acme:\n    privateKeySecretRef:\n      name: example-account-key\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    solvers:\n      - dns01:\n          my-dns-provider:\n            region: eu-west-1\n            accessKeyID: my-key-id\n            secretAccessKeySecretRef:\n              name: my-dns-provider\n              key: secret-access-key\n        selector:\n          dnsNames:\n            - '*.example.org'\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-prod\nspec:\n  acme:\n    privateKeySecretRef:\n      name: example-account-key\n    server: https://acme-v02.api.letsencrypt.org/directory\n    solvers:\n      - dns01:\n          my-dns-provider:\n            region: eu-west-1\n            accessKeyID: my-key-id\n            secretAccessKeySecretRef:\n              name: my-dns-provider\n              key: secret-access-key\n        selector:\n          dnsNames:\n            - '*.example.org'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ingress-controller",children:"Ingress Controller"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/kubernetes/ingress-nginx",children:"Ingress-nginx"})," is the only tested ingress controller. The installation must support snippet annotations (",(0,r.jsx)(n.code,{children:"allowSnippetAnnotations=true"}),"). You can install and update it as shown below. Note that for production environments it is recommended to reconsider the HSTS setting given here."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm upgrade --install ingress-nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx  --namespace ingress-nginx --create-namespace --set controller.allowSnippetAnnotations=true --set controller.config.hsts=false\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prometheus",children:"Prometheus"}),"\n",(0,r.jsx)(n.p,{children:"Prometheus is a requirement:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm upgrade -i prometheus prometheus-community/kube-prometheus-stack --namespace prometheus --create-namespace\n"})}),"\n",(0,r.jsx)(n.h3,{id:"storage",children:"Storage"}),"\n",(0,r.jsx)(n.p,{children:"Clarify with your SCS cluster operator what kind of storage your K8s cluster provides. Your configuration will need the according information. You can query the available storage classes like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"kubectl get storageclasses.storage.k8s.io\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can hand over the storage class in your ",(0,r.jsx)(n.code,{children:"values.yaml.gotmpl"})," (see ",(0,r.jsx)(n.a,{href:"/user-docs/application-examples/opendesk-on-scs/getting_started",children:"Getting Started"}),")."]}),"\n",(0,r.jsx)(n.h3,{id:"optional-credentials-for-a-mail-relay",children:"Optional: Credentials for a mail relay"}),"\n",(0,r.jsx)(n.p,{children:"If you want your openDesk deployment to be able to send outgoing emails, have the hostname and credentials of an SMTP relay at hand."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(96540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);