"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1396],{25641:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"container/components/cluster-stacks/components/cluster-stack-operator/architecture/mgt-cluster-flow","title":"Management Cluster flow","description":"In a Cluster API management cluster, the Cluster API operators run. In our management cluster, there are also the Cluster Stack operators.","source":"@site/docs/03-container/components/cluster-stacks/components/cluster-stack-operator/architecture/mgt-cluster-flow.md","sourceDirName":"03-container/components/cluster-stacks/components/cluster-stack-operator/architecture","slug":"/container/components/cluster-stacks/components/cluster-stack-operator/architecture/mgt-cluster-flow","permalink":"/docs/container/components/cluster-stacks/components/cluster-stack-operator/architecture/mgt-cluster-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/03-container/components/cluster-stacks/components/cluster-stack-operator/architecture/mgt-cluster-flow.md","tags":[],"version":"current","frontMatter":{}}');var c=s(74848),o=s(28453);const n={},a="Management Cluster flow",l={},u=[];function i(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"management-cluster-flow",children:"Management Cluster flow"})}),"\n",(0,c.jsx)(t.p,{children:"In a Cluster API management cluster, the Cluster API operators run. In our management cluster, there are also the Cluster Stack operators."}),"\n",(0,c.jsxs)(t.p,{children:["The user controls workload clusters via custom resources. As the Cluster Stack approach uses ",(0,c.jsx)(t.code,{children:"ClusterClasses"}),", the user has to create only a ",(0,c.jsx)(t.code,{children:"Cluster"})," object and refer to a ",(0,c.jsx)(t.code,{children:"ClusterClass"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["However, in order for this to work, the ",(0,c.jsx)(t.code,{children:"ClusterClass"})," has to be applied as well as all other Cluster API objects that are referenced by the ",(0,c.jsx)(t.code,{children:"ClusterClass"}),", such as ",(0,c.jsx)(t.code,{children:"MachineTemplates"}),", etc."]}),"\n",(0,c.jsxs)(t.p,{children:["These Cluster API objects are packaged in a Helm Chart that is part of every cluster stack. The clusterstackrelease-controller is responsible for applying this Helm chart, which is done by first calling ",(0,c.jsx)(t.code,{children:"helm template"}),' and then the "apply" method of the Kubernetes go-client.']}),"\n",(0,c.jsxs)(t.p,{children:["The main resource is always the ",(0,c.jsx)(t.code,{children:"ClusterClass"})," that follows a very specific naming pattern and is called in the exact same way as the ",(0,c.jsx)(t.code,{children:"ClusterStackRelease"})," object that manages it. For example, ",(0,c.jsx)(t.code,{children:"docker-ferrol-1-27-v1"}),", which refers to all defining properties of a specific release of a cluster stack for a certain provider."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>a});var r=s(96540);const c={},o=r.createContext(c);function n(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);