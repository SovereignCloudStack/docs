"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[70077],{76737:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"iaas/guides/operations-guide/package-upgrades","title":"Package Upgrades","description":"Compute Nodes","source":"@site/docs/02-iaas/guides/operations-guide/package-upgrades.md","sourceDirName":"02-iaas/guides/operations-guide","slug":"/iaas/guides/operations-guide/package-upgrades","permalink":"/docs/iaas/guides/operations-guide/package-upgrades","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/02-iaas/guides/operations-guide/package-upgrades.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Package Upgrades"},"sidebar":"docs","previous":{"title":"Octavia","permalink":"/docs/iaas/guides/operations-guide/openstack/octavia"},"next":{"title":"Troubleshooting Guide","permalink":"/docs/iaas/guides/troubleshooting-guide/"}}');var a=s(74848),o=s(28453);const t={sidebar_label:"Package Upgrades"},r="Package Upgrades",d={},c=[{value:"Compute Nodes",id:"compute-nodes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"package-upgrades",children:"Package Upgrades"})}),"\n",(0,a.jsx)(n.h2,{id:"compute-nodes",children:"Compute Nodes"}),"\n",(0,a.jsx)(n.p,{children:"Set HOST environment to be used in subsequent commands to the compute node which is going to be updated"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'HOST=""\n'})}),"\n",(0,a.jsx)(n.p,{children:"Disable compute host, so that no new instances are scheduled to it and instance state remains unchanged"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism manage compute disable $HOST\n"})}),"\n",(0,a.jsx)(n.p,{children:"Live-migrate all instances to other compute nodes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism manage compute migrate --yes $HOST\n"})}),"\n",(0,a.jsx)(n.p,{children:"List remaining nodes in non-live-migratable state"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism manage compute list $HOST\n"})}),"\n",(0,a.jsx)(n.p,{children:"Move shut off nodes to other nodes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"INTERACTIVE=false openstack server list --all-projects --status SHUTOFF --host $HOST -f value -c ID | while read -r ID; do openstack server migrate $ID; done\n"})}),"\n",(0,a.jsx)(n.p,{children:"Show migrations"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"openstack server migration list --host $HOST --changes-since 2025-04-15\n"})}),"\n",(0,a.jsx)(n.p,{children:"and confirm resize for all finished migrations individually"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"openstack server resize confirm #SERVER\n"})}),"\n",(0,a.jsx)(n.p,{children:"Check for remaining nodes in unmigratables states"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism manage compute list $HOST\n"})}),"\n",(0,a.jsx)(n.p,{children:"Apply package upgrades"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism apply upgrade-packages -e ireallymeanit=yes --limit $HOST\n"})}),"\n",(0,a.jsx)(n.p,{children:"Optionally reboot the node"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism apply reboot -e ireallymeanit=yes -e reboot_wait=yes --limit $HOST\n"})}),"\n",(0,a.jsx)(n.p,{children:"Re-enable the compute node"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"osism manage compute enable $HOST\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>r});var i=s(96540);const a={},o=i.createContext(a);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);