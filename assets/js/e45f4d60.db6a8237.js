"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[89947],{5929:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"iaas/guides/operations-guide/kubernetes","title":"Kubernetes","description":"Hubble","source":"@site/docs/02-iaas/guides/operations-guide/kubernetes.md","sourceDirName":"02-iaas/guides/operations-guide","slug":"/iaas/guides/operations-guide/kubernetes","permalink":"/docs/iaas/guides/operations-guide/kubernetes","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/02-iaas/guides/operations-guide/kubernetes.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Kubernetes"},"sidebar":"docs","previous":{"title":"Infrastructure","permalink":"/docs/iaas/guides/operations-guide/infrastructure"},"next":{"title":"Network","permalink":"/docs/iaas/guides/operations-guide/network"}}');var r=n(74848),i=n(28453);const a={sidebar_label:"Kubernetes"},d="Kubernetes",c={},o=[{value:"Hubble",id:"hubble",level:2},{value:"Get service IP address",id:"get-service-ip-address",level:2},{value:"Headlamp",id:"headlamp",level:2},{value:"Get service IP address",id:"get-service-ip-address-1",level:2},{value:"Generate a service account token",id:"generate-a-service-account-token",level:3}];function u(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"kubernetes",children:"Kubernetes"})}),"\n",(0,r.jsx)(s.h2,{id:"hubble",children:"Hubble"}),"\n",(0,r.jsx)(s.h2,{id:"get-service-ip-address",children:"Get service IP address"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"$ kubectl get service -n kube-system hubble-ui\nNAME        TYPE           CLUSTER-IP      EXTERNAL-IP    PORT(S)        AGE\nhubble-ui   LoadBalancer   10.43.136.133   172.31.252.0   80:31797/TCP   6h22m\n"})}),"\n",(0,r.jsx)(s.h2,{id:"headlamp",children:"Headlamp"}),"\n",(0,r.jsx)(s.h2,{id:"get-service-ip-address-1",children:"Get service IP address"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"$ kubectl get service -n kube-system headlamp\nNAME       TYPE           CLUSTER-IP      EXTERNAL-IP    PORT(S)        AGE\nheadlamp   LoadBalancer   10.43.165.245   172.31.252.1   80:32210/TCP   5h34m\n"})}),"\n",(0,r.jsx)(s.h3,{id:"generate-a-service-account-token",children:"Generate a service account token"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"kubectl create token headlamp-admin -n kube-system\n"})})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>d});var t=n(96540);const r={},i=t.createContext(r);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);