"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[60953],{70160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"operating-scs/components/monitoring/docs/kaas","title":"KaaS monitoring (experimental)","description":"This component is marked as experimental, and it is not part of the reference SCS installation available","source":"@site/docs/04-operating-scs/components/monitoring/docs/kaas.md","sourceDirName":"04-operating-scs/components/monitoring/docs","slug":"/operating-scs/components/monitoring/docs/kaas","permalink":"/docs/operating-scs/components/monitoring/docs/kaas","draft":false,"unlisted":false,"editUrl":"https://github.com/SovereignCloudStack/docs/tree/main/docs/04-operating-scs/components/monitoring/docs/kaas.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"IaaS monitoring (experimental)","permalink":"/docs/operating-scs/components/monitoring/docs/iaas"},"next":{"title":"Zuul monitoring","permalink":"/docs/operating-scs/components/monitoring/docs/zuul"}}');var s=t(74848),i=t(28453);const r={},o="KaaS monitoring (experimental)",c={},l=[{value:"Enable KaaS layer monitoring",id:"enable-kaas-layer-monitoring",level:2},{value:"KaaS metric importer",id:"kaas-metric-importer",level:2},{value:"KaaS mock service",id:"kaas-mock-service",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"kaas-monitoring-experimental",children:"KaaS monitoring (experimental)"})}),"\n",(0,s.jsxs)(n.p,{children:["This component is marked as experimental, and it is not part of the reference SCS installation available\nat ",(0,s.jsx)(n.a,{href:"https://monitoring.scs.community",children:"https://monitoring.scs.community"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"enable-kaas-layer-monitoring",children:"Enable KaaS layer monitoring"}),"\n",(0,s.jsx)(n.p,{children:"TODO: Provide clear instructions on how to enable KaaS layer monitoring."}),"\n",(0,s.jsxs)(n.p,{children:["Please check out the ",(0,s.jsx)(n.code,{children:"mvp-0"})," tag and find the related comments on what needs to be done in the monitoring\nvalues to enable KaaS monitoring in your Observer cluster."]}),"\n",(0,s.jsx)(n.h2,{id:"kaas-metric-importer",children:"KaaS metric importer"}),"\n",(0,s.jsx)(n.p,{children:"To test the Monitoring of the KaaS layer use case, deploy the Kaas-metric-importer\ninto the Observer cluster."}),"\n",(0,s.jsx)(n.p,{children:"The Kaas-metric-importer is a simple service through which the KaaS software registers\nand unregisters newly created or deleted KaaS clusters in the Observer monitoring.\nThis functionality enables the Observer monitoring to differentiate between KaaS clusters deleted intentionally\nand those that have stopped writing metrics to the Observer monitoring for any reason."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f kaas/kaas-metric-importer.yaml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The Kaas-metric-importer uses an image built from ",(0,s.jsx)(n.a,{href:"https://github.com/m3dbx/prometheus_remote_client_golang",children:"https://github.com/m3dbx/prometheus_remote_client_golang"}),".\nIt has mounted configmap and based on configmap keys it pushes custom metric ",(0,s.jsx)(n.code,{children:"kaas"}),"\nwith label ",(0,s.jsx)(n.code,{children:"cluster"})," and value ",(0,s.jsx)(n.code,{children:"1"})," into the thanos receiver."]}),"\n",(0,s.jsx)(n.p,{children:"Example of configmap:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'data:\n  workload-cluster: ""\n'})}),"\n",(0,s.jsxs)(n.p,{children:["It pushes metric e.g. ",(0,s.jsx)(n.code,{children:'kaas{cluster="workload-cluster"} 1'})," to the Observer.\nIt is important to keep the configmap up-to-date with your KaaS offering. This is automated e.g.\nin the KaaS mock service below."]}),"\n",(0,s.jsx)(n.h2,{id:"kaas-mock-service",children:"KaaS mock service"}),"\n",(0,s.jsx)(n.p,{children:"To evaluate the Monitoring of the KaaS layer use case and view actual metrics in your\nObserver monitoring cluster, you can launch the KaaS mock service."}),"\n",(0,s.jsxs)(n.p,{children:["Put your Observer monitoring cluster kubeconfig into the ",(0,s.jsx)(n.code,{children:"./kaas/manifests/"})," directory and name\nit ",(0,s.jsx)(n.code,{children:"observer-kubeconfig.yaml"})," (or adjust kaas service ",(0,s.jsx)(n.code,{children:"./kaas/app/config.py"})," accordingly)."]}),"\n",(0,s.jsx)(n.p,{children:"If you're utilizing the KinD Observer deployment outlined in this tutorial, collect the kubeconfig using the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kind get kubeconfig --name observer > ./kaas/manifests/observer-kubeconfig.yaml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["All KaaS mock service dependencies can be installed via the corresponding ",(0,s.jsx)(n.code,{children:"./kaas/requirements.txt"})," file.\nInstalling them into a Python virtualenv is recommended."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd kaas\npython3 -m venv .venv  # Optional\nsource .venv/bin/activate  # Optional\n# Install kaas dependencies\npip install -r requirements.txt\n\n# Launch the KaaS mock service\nmake kaas\n"})}),"\n",(0,s.jsx)(n.p,{children:"At this point, you should have the ability to access the KaaS mock service Swagger UI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"http://127.0.0.1:8080/kaas\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Create KaaS cluster through Swagger UI: ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8080/kaas#/Clusters/create_cluster_api_clusters__post",children:"Create Cluster"})," or\ncall directly the KaaS service API via some client, e.g.:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST -H "Content-Type: application/json" http://127.0.0.1:8080/api/clusters/ -d \'{"name": "kaas"}\'\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Navigate to the ",(0,s.jsx)(n.a,{href:"http://localhost:30000/d/kaas-monitoring/kaas-monitoring",children:"KaaS Monitoring dashboard"}),"\nin the Observer monitoring. After a few minutes (approximately 4), your KaaS cluster should become visible.\nClick on the cluster box to dive into KaaS cluster dashboards at a more detailed level.\nRepeat the process to explore further and gain deeper insights."]}),"\n",(0,s.jsx)(n.p,{children:"Note: The disk utilization expression for the Docker environment has not been adjusted,\nso you will encounter non-realistic numbers in the nodes/disk sections. However,\nthe other sections should accurately reflect the reality."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Retrieve a list of all KaaS clusters and check their status. Swagger UI: ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8080/kaas#/Clusters/get_clusters_api_clusters__get",children:"Get List of Clusters"})," or\ncall directly the KaaS service API via some client, e.g.:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET -H 'accept: application/json' http://127.0.0.1:8080/api/clusters/\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Get Kaas Cluster kubeconfig by its name through Swagger UI: ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8080/kaas#/Clusters/get_kubeconfig_api_clusters__name__get",children:"Get Cluster kubeconfig"})," or\ncall directly the KaaS service API via some client and save it, e.g.:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -s -X GET -H 'accept: application/json' http://127.0.0.1:8080/api/clusters/kaas > kaas-kube\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Now, you have the opportunity to play with your KaaS cluster and experiment with triggering\nmonitoring alerts by initiating actions like destroying certain components \ud83d\ude0e."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubectl --kubeconfig kaas-kube get po -A\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Finally, delete your KaaS cluster by its name through Swagger UI: ",(0,s.jsx)(n.a,{href:"http://127.0.0.1:8080/kaas#/Clusters/delete_cluster_api_clusters__delete",children:"Delete Cluster"})," or\ncall directly the KaaS service API via some client and save it, e.g.:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -X DELETE http://127.0.0.1:8080/api/clusters/?name=kaas\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(96540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);